/*
 * File: app/model/Sipas/Unit.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.model.Sipas.Unit', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.Field',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'Ext.data.association.HasOne',
        'Ext.data.association.HasMany'
    ],
    uses: [
        'SIPAS.model.Sipas.Staf',
        'SIPAS.model.Sipas.sla.Unit'
    ],

    idProperty: 'unit_id',

    fields: [
        {
            name: 'unit_id'
        },
        {
            name: 'unit_kode'
        },
        {
            name: 'unit_nama'
        },
        {
            name: 'unit_induk'
        },
        {
            name: 'unit_manager'
        },
        {
            name: 'unitkerja_usedisposisiformat'
        },
        {
            name: 'unitkerja_disposisiformat'
        },
        {
            name: 'unit_rubrik'
        },
        {
            name: 'unit_induk_id'
        },
        {
            name: 'unit_induk_nama'
        },
        {
            name: 'unit_isbuatsurat',
            type: 'boolean'
        },
        {
            convert: function(v, rec) {
                return (new Ext.Template('{unit_nama} ({unit_kode})')).apply(rec.getData());
            },
            name: 'unit_display',
            persist: false
        },
        {
            name: 'staf_id'
        },
        {
            name: 'staf_nip'
        },
        {
            name: 'staf_nama'
        },
        {
            convert: function(v, rec) {
                return (new Ext.Template('({staf_id}) {staf_nama}')).apply(rec.getData());
            },
            name: 'staf_title'
        },
        {
            convert: function(v, rec) {
                return rec.get('leaf') ? 'icon ion-md-person':'icon ion-md-person grey-600-i';
            },
            defaultValue: 'icon ion-md-person grey-700-i',
            name: 'iconCls'
        },
        {
            name: 'unit_properti'
        },
        {
            defaultValue: 1,
            name: 'unit_isaktif',
            type: 'boolean'
        },
        {
            name: 'manager_id'
        },
        {
            name: 'manager_kode'
        },
        {
            name: 'manager_nama'
        },
        {
            name: 'manager_unit'
        },
        {
            name: 'manager_unit_nama'
        },
        {
            name: 'manager_jabatan'
        },
        {
            name: 'manager_jabatan_nama'
        },
        {
            name: 'unit_staf_jumlah',
            type: 'int'
        },
        {
            name: 'unit_parent_path'
        },
        {
            name: 'unit_pos_code'
        }
    ],

    proxy: {
        type: 'ajax',
        api: {
            create: 'server.php/sipas/unit/create',
            read: 'server.php/sipas/unit/read',
            update: 'server.php/sipas/unit/update',
            destroy: 'server.php/sipas/unit/destroy'
        },
        reader: {
            type: 'json',
            root: 'data'
        }
    },

    hasOne: [
        {
            model: 'SIPAS.model.Sipas.Staf',
            primaryKey: 'staf_id',
            foreignKey: 'unit_manager',
            getterName: 'getManager',
            setterName: 'setManager'
        },
        {
            model: 'SIPAS.model.Sipas.Unit',
            primaryKey: 'unit_id',
            foreignKey: 'unit_induk',
            getterName: 'getParent',
            setterName: 'setParent'
        }
    ],

    hasMany: [
        {
            model: 'SIPAS.model.Sipas.sla.Unit',
            primaryKey: 'unit_id',
            foreignKey: 'sla_unit_unit',
            name: 'fetchSLAUnit',
            storeConfig: {
                remoteFilter: false,
                remoteSort: false,
                remoteGroup: false,
                pageSize: 100,
                proxy: {
                    type: 'ajax',
                    reader: {
                        root: 'data'
                    },
                    api: {
                        read: 'server.php/sipas/sla_unit/read',
                        create: 'server.php/sipas/sla_unit/create',
                        update: 'server.php/sipas/sla_unit/update',
                        destroy: 'server.php/sipas/sla_unit/destroy'
                    }
                },
                sorters: {
                    property: 'sla_unit_sla'
                }
            }
        },
        {
            model: 'SIPAS.model.Sipas.Staf',
            primaryKey: 'unit_id',
            foreignKey: 'staf_unit',
            name: 'fetchStaf',
            storeConfig: {
                remoteFilter: false,
                remoteSort: false,
                remoteGroup: false,
                proxy: {
                    type: 'ajax',
                    reader: {
                        root: 'data'
                    },
                    api: {
                        read: 'server.php/sipas/staf/read'
                    }
                },
                sorters: {
                    property: 'unit_nama'
                }
            }
        }
    ]
});