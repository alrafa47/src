/*
 * File: app/model/Sipas/Staf.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.model.Sipas.Staf', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.Field',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'Ext.data.association.HasOne',
        'Ext.data.association.HasMany'
    ],
    uses: [
        'SIPAS.model.Sipas.Jabatan',
        'SIPAS.model.Sipas.Golongan',
        'SIPAS.model.Sipas.Unit',
        'SIPAS.model.Sipas.Peran',
        'SIPAS.model.Sipas.staf.Wakil',
        'SIPAS.model.Sipas.staf.tim.Anggota',
        'SIPAS.model.Sipas.unit.cakupan.Jumlah'
    ],

    statics: {
        renderPegawai: function(val, record) {
            var record = record,
                id = record.get('staf_id'),
                nama = record.get('staf_nama'),
                jabatan = record.get('jabatan_nama') ? record.get('jabatan_nama') : '(Tidak ada jabatan)',
                unit = record.get('unit_nama') ? record.get('unit_nama') : '(Tidak ada unit)';

            var tpl = new Ext.Template([
            "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
            "<img src='server.php/sipas/staf/get_image/foto?id={staf_id}' class='img img-circle img-32'>"+
            "</div><div class='cell-text'><div class='subtext ellipsis'>{staf_nama}</div><div class='supporttext supporttext-dark ellipsis'>{jabatan_nama} - {unit_nama}</div></div>"+
            "</div>"
            ]);

            if (!nama){
                nama = '<span class="supporttet">(Tidak Ada Nama)</span>';
            }
            if (jabatan === null || jabatan === '' || !jabatan){
                jabatan = '(Tidak ada jabatan)';
            }
            if (unit === null || unit === '' || !unit){
                unit = '(Tidak ada unit)';
            }

            return tpl.apply({
                'staf_id' : id,
                'staf_nama' : nama,
                'jabatan_nama' : jabatan,
                'unit_nama' : unit
            });
        },

        renderRead: function(id, name, jabatan, unit, record) {
            if(record.get('disposisi_masuk_baca_tgl')){
                var tpl = new Ext.Template([
                "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
                "<img src='server.php/sipas/staf/get_image/foto?id={id}' class='img img-circle img-32'>"+
                "</div><div class='cell-text'>"+
                "<div class='subtext ellipsis'>{nama}</div>"+
                "<div class='supporttext supporttext-dark ellipsis'>{jabatan} - {unit}</div>"+
                "</div></div>"
                ]);
            }else{
                var tpl = new Ext.Template([
                "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
                "<img src='server.php/sipas/staf/get_image/foto?id={id}' class='img img-circle img-32'>"+
                "</div><div class='cell-text'>"+
                "<div class='subtext bold ellipsis'>{nama}</div>"+
                "<div class='supporttext bold ellipsis'>{jabatan} - {unit}</div>"+
                "</div></div>"
                ]);
            }

            if (name === null || name === '' || !name){
                name = '<span class="supporttext">(Tidak Ada Nama)</span>';
            }
            if (jabatan === null || jabatan === '' || !jabatan){
                jabatan = '(Tidak ada jabatan)';
            }
            if (unit === null || unit === '' || !unit){
                unit = '(Tidak ada unit)';
            }

            return tpl.apply({
                'id' : id,
                'nama' : name,
                'jabatan' : jabatan,
                'unit' : unit
            });
        },

        renderPegawaiList: function(id, name, jabatan, unit, record) {

            var tpl = new Ext.Template([
            "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
            "<img src='server.php/sipas/staf/get_image/foto?id={id}' class='img img-circle img-32'>"+
            "</div><div class='cell-text'><div class='subtext ellipsis'>{nama}</div><div class='supporttext supporttext-dark ellipsis'>{jabatan} - {unit}</div></div>"+
            "</div>"
            ]);

            if (name === null || name === '' || !name){
                name = '<span class="supporttext">(Tidak Ada Nama)</span>';
            }
            if (jabatan === null || jabatan === '' || !jabatan){
                jabatan = '(Tidak ada jabatan)';
            }
            if (unit === null || unit === '' || !unit){
                unit = '(Tidak ada unit)';
            }

            return tpl.apply({
                'id' : id,
                'nama' : name,
                'jabatan' : jabatan,
                'unit' : unit
            });
        },

        renderPegawaiAdditional: function(id, name, jabatan, unit, additional, use_url) {
            if (!use_url){
                id = 'server.php/sipas/staf/get_image/foto?id='+id;
            }

            var tpl = new Ext.XTemplate(["<div class='cell-row'><div class='cell-visual cell-visual-left'>",
                "<img src='{id}' class='img img-circle img-32'>",
                "</div>",
                "<div class='cell-text'>",
                "<div class='subtext ellipsis'>{nama}</div>",
                "<div class='supporttext supporttext-dark ellipsis'>{jabatan} - {unit}</div>",
                "<div class='supporttext supporttext-dark ellipsis'>{additional}</div>",
                "</div></div>"
                ]);

            if (name === null || name === '' || !name){
                name = '<span class="supporttext">(Tidak Ada Nama)</span>';
            }
            if (jabatan === null || jabatan === '' || !jabatan){
                jabatan = '(Tidak ada jabatan)';
            }
            if (unit === null || unit === '' || !unit){
                unit = '(Tidak ada unit)';
            }

            return tpl.apply({
                id : id,
                nama : name,
                jabatan : jabatan,
                unit : unit,
                additional : additional
            });
        },

        renderDisposisiSama: function(title, idPengirim, namaPengirim, jabatanPengirim, unitPengirim, infoPengirim, rahasia, arahanPengirim, additional, respon, disposisi, cabut) {
            idPengirim = 'server.php/sipas/staf/get_image/foto?id='+idPengirim;

            var tpl = new Ext.XTemplate([
            "<div class='titletext margin-left-12'>{title}</div>"+
            "<div class='cell-row margin-top-4 margin-left-12'>"+
            "<div class='cell-visual cell-visual-left'>",
            "<img src='{idPengirim}' class='img img-circle img-32'>",
            "</div>",
            "<div class='cell-text'>",
            "<div class='subtext'>{namaPengirim}</div>",
            "<div class='supporttext supporttext-dark'>{jabatanPengirim} - {unitPengirim}</div>",
            "</div>"+
            "</div>"+
            "<div class='cell-row margin-top-10 margin-left-48'>"+
            "<div class='cell-text margin-left-4'>",
            "<div class='subtext margin-top-4'>{infoPengirim}</div>",
            "<div class='supporttext supporttext-dark'>{arahanPengirim}{rahasia}</div>",
            "</div>"+
            "<div class='cell-row margin-top-5 margin-left-24'>"+
            "<div class='supporttext supporttext-dark margin-top-4'>{additional}</div>",
            "<div class='supporttext supporttext-dark'>{respon}</div>",
            "<div class='supporttext supporttext-dark'>{disposisi}</div>",
            "<div class='supporttext supporttext-dark'>{cabut}</div>",
            "</div>"
            ]);

            if (namaPengirim === null || namaPengirim === '' || !namaPengirim){
                namaPengirim = '<span class="supporttext">(Tidak Ada Nama)</span>';
            }
            if (jabatanPengirim === null || jabatanPengirim === '' || !jabatanPengirim){
                jabatanPengirim = '(Tidak ada jabatan)';
            }
            if (unitPengirim === null || unitPengirim === '' || !unitPengirim){
                unitPengirim = '(Tidak ada unit)';
            }

            return tpl.apply({
                title : title,
                idPengirim : idPengirim,
                namaPengirim : namaPengirim,
                jabatanPengirim : jabatanPengirim,
                unitPengirim : unitPengirim,
                infoPengirim : infoPengirim,
                rahasia : rahasia,
                arahanPengirim : arahanPengirim,
                additional : additional,
                respon : respon,
                disposisi : disposisi,
                cabut: cabut
            });
        }
    },

    idProperty: 'staf_id',

    fields: [
        {
            name: 'staf_id'
        },
        {
            name: 'staf_profil'
        },
        {
            name: 'staf_kode'
        },
        {
            name: 'staf_nama'
        },
        {
            defaultValue: 1,
            name: 'staf_kelamin',
            type: 'int'
        },
        {
            convert: function(v, rec) {
                switch(rec.get('staf_kelamin')){
                    case rec.statics.gender.MALE:
                    return 'Laki-Laki';
                    case rec.statics.gender.FEMALE:
                    return 'Perempuan';
                }
            },
            defaultValue: 1,
            name: 'staf_kelamin_text',
            type: 'int'
        },
        {
            name: 'staf_email'
        },
        {
            name: 'staf_unit'
        },
        {
            name: 'staf_isaktif',
            type: 'boolean'
        },
        {
            name: 'staf_ishapus',
            type: 'boolean'
        },
        {
            name: 'staf_jabatan'
        },
        {
            name: 'staf_golongan'
        },
        {
            name: 'staf_sgt'
        },
        {
            name: 'staf_akun'
        },
        {
            name: 'staf_peran'
        },
        {
            convert: function(v, rec) {
                return (new Ext.Template('({staf_kode}) {staf_nama}')).apply(rec.getData());
            },
            name: 'staf_title'
        },
        {
            name: 'staf_properti'
        },
        {
            name: 'unit_id'
        },
        {
            name: 'unit_kode'
        },
        {
            name: 'unit_nama'
        },
        {
            convert: function(v, rec) {
                return (new Ext.Template('({unit_nip}) {unit_nama}')).apply(rec.getData());
            },
            name: 'unit_display'
        },
        {
            name: 'jabatan_id'
        },
        {
            name: 'jabatan_induk'
        },
        {
            name: 'jabatan_kode'
        },
        {
            name: 'jabatan_nama'
        },
        {
            name: 'jabatan_isnomor',
            type: 'int'
        },
        {
            name: 'akun_id'
        },
        {
            name: 'akun_ponsel'
        },
        {
            name: 'akun_nama'
        },
        {
            name: 'akun_sandi_edit',
            type: 'boolean'
        },
        {
            serialize: function(value, record) {
                record.set('akun_sandi');
                if(Ext.isEmpty(value)){
                    return null;
                }else{
                    return CryptoJS.MD5(value).toString();
                }
            },
            name: 'akun_sandi'
        },
        {
            name: 'akun_surel'
        },
        {
            name: 'akun_isaktif',
            type: 'boolean'
        },
        {
            name: 'peran_id'
        },
        {
            name: 'peran_nama'
        },
        {
            name: 'disposisi_penerima_istembusan'
        },
        {
            name: 'disposisi_penerima_isberkas'
        },
        {
            name: 'surat_stack_istembusan'
        },
        {
            name: 'surat_stack_isberkas'
        },
        {
            name: 'surat_stack_level',
            type: 'int'
        },
        {
            name: 'staf_wakil_jumlah',
            type: 'int'
        },
        {
            name: 'staf_atasan_jumlah',
            type: 'int'
        },
        {
            name: 'staf_status_insert'
        },
        {
            name: 'staf_tgl_insert'
        },
        {
            name: 'akun_lastmasuk',
            type: 'date'
        },
        {
            name: 'staf_kelompok_jumlah',
            type: 'int'
        },
        {
            name: 'jabatan_ispenerima',
            type: 'boolean'
        },
        {
            name: 'staf_akun_isdefault',
            type: 'int'
        },
        {
            name: 'staf_pgs_jumlah',
            type: 'int'
        },
        {
            name: 'surat_stack_profil'
        },
        {
            name: 'jabatan_asisten_jumlah',
            type: 'int'
        },
        {
            name: 'jabatan_atasan_jumlah',
            type: 'int'
        },
        {
            name: 'staf_status'
        },
        {
            name: 'golongan_id'
        },
        {
            name: 'golongan_level'
        }
    ],

    proxy: {
        type: 'ajax',
        api: {
            create: 'server.php/sipas/staf/create',
            read: 'server.php/sipas/staf/read',
            update: 'server.php/sipas/staf/update',
            destroy: 'server.php/sipas/staf/destroy'
        },
        reader: {
            type: 'json',
            root: 'data'
        }
    },

    hasOne: [
        {
            model: 'SIPAS.model.Sipas.Jabatan',
            primaryKey: 'jabatan_id',
            foreignKey: 'staf_jabatan',
            getterName: 'getJabatan',
            setterName: 'setJabatan'
        },
        {
            model: 'SIPAS.model.Sipas.Golongan',
            primaryKey: 'golongan_id',
            foreignKey: 'staf_golongan',
            getterName: 'getGolongan',
            setterName: 'setGolongan'
        },
        {
            model: 'SIPAS.model.Sipas.Unit',
            primaryKey: 'unit_id',
            foreignKey: 'staf_unit',
            getterName: 'getUnit',
            setterName: 'setUnit'
        },
        {
            model: 'SIPAS.model.Sipas.Peran',
            primaryKey: 'peran_id',
            foreignKey: 'staf_peran',
            getterName: 'getPeran',
            setterName: 'setPeran'
        },
        {
            model: 'SIPAS.model.Sipas.unit.cakupan.Jumlah',
            primaryKey: 'unit_cakupan_jabatan',
            foreignKey: 'staf_jabatan',
            getterName: 'getJumlahCakupan',
            setterName: 'setJumlahCakupan'
        }
    ],

    hasMany: [
        {
            model: 'SIPAS.model.Sipas.staf.Wakil',
            primaryKey: 'staf_id',
            foreignKey: 'staf_wakil_staf',
            name: 'fetchAsistensi',
            storeConfig: {
                remoteFilter: false,
                remoteSort: false,
                remoteGroup: false,
                pageSize: 1000,
                proxy: {
                    type: 'ajax',
                    reader: {
                        root: 'data'
                    },
                    api: {
                        read: 'server.php/sipas/staf_wakil/asisten',
                        create: 'server.php/sipas/staf_wakil/create',
                        update: 'server.php/sipas/staf_wakil/update',
                        destroy: 'server.php/sipas/staf_wakil/destroy'
                    }
                },
                sorters: {
                    property: 'staf_wakil_asisten'
                }
            }
        },
        {
            model: 'SIPAS.model.Sipas.staf.Wakil',
            primaryKey: 'staf_id',
            foreignKey: 'staf_wakil_asisten',
            name: 'fetchAtasan',
            storeConfig: {
                remoteFilter: false,
                remoteSort: false,
                remoteGroup: false,
                pageSize: 1000,
                proxy: {
                    type: 'ajax',
                    reader: {
                        root: 'data'
                    },
                    api: {
                        read: 'server.php/sipas/staf_wakil/atasan',
                        create: 'server.php/sipas/staf_wakil/create',
                        update: 'server.php/sipas/staf_wakil/update',
                        destroy: 'server.php/sipas/staf_wakil/destroy'
                    }
                },
                sorters: {
                    property: 'staf_wakil_staf'
                }
            }
        },
        {
            model: 'SIPAS.model.Sipas.staf.tim.Anggota',
            primaryKey: 'staf_id',
            foreignKey: 'staf_tim_anggota_staf',
            name: 'fetchTim',
            storeConfig: {
                remoteFilter: false,
                remoteSort: false,
                remoteGroup: false,
                pageSize: 1000,
                proxy: {
                    type: 'ajax',
                    reader: {
                        root: 'data'
                    },
                    api: {
                        read: 'server.php/sipas/staf_tim_anggota/read',
                        create: 'server.php/sipas/staf_tim_anggota/create',
                        update: 'server.php/sipas/staf_tim_anggota/update',
                        destroy: 'server.php/sipas/staf_tim_anggota/destroy'
                    }
                }
            }
        }
    ],

    constructor: function() {
        var me = this;
        me.processSipasStaf(me);
        me.callParent(arguments);
    },

    processSipasStaf: function(config) {
        return Ext.apply(config,{
            statics : {
                gender:{
                    MALE: 1,
                    FEMALE: 0
                }
            }
        });
    },

    generateGender: function() {
        switch(this.get('staf_kelamin')){
            case this.statics.gender.MALE: return '<span class="badge badge-solid margin-right-4"><i class="icon ion-md-male blue-600-i"></i></span><span class="blue-600-i">Laki-laki</span>';
            case this.statics.gender.FEMALE: return '<span class="badge badge-solid margin-right-4"><i class="icon ion-md-female pink-600-i"></i></span><span class="pink-600-i">Perempuan</span>';
        }
    },

    convertPassword: function(v, rec) {
        this.con
    }

});