/*
 * File: app/view/Sipas/koreksi/session/riwayat/petikan/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.koreksi.session.riwayat.petikan.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_koreksi_session_riwayat_petikan_list',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.TextItem',
        'Ext.toolbar.Fill',
        'Ext.grid.column.Boolean',
        'Ext.form.field.Checkbox',
        'Ext.grid.View',
        'Ext.grid.plugin.DragDrop',
        'Ext.util.Point'
    ],

    border: false,
    title: 'Daftar Riwayat Petikan',
    allowDeselect: true,
    disableSelection: true,
    hideHeaders: true,
    store: 'Sipas.koreksi.session.riwayat.petikan.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    height: 35,
                    hidden: true,
                    itemId: 'toolbarProperties',
                    items: [
                        {
                            xtype: 'tbtext',
                            text: '<b style="color:#04408c">Daftar Riwayat Petikan</b>'
                        },
                        {
                            xtype: 'tbfill'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var id = record.getId(),
                            jabatan = record.get('disposisi_masuk_penerima_jabatan_nama') ? record.get('disposisi_masuk_penerima_jabatan_nama') : '(Tidak ada jabatan)',
                            unit = record.get('disposisi_masuk_penerima_unit_nama') ? record.get('disposisi_masuk_penerima_unit_nama') : '(Tidak ada unit)',
                            tpl = this.dataTpl || (
                            this.tpl =
                            "<div class='cell-row margin-left-8'>"+
                            "<div class='cell-visual cell-visual-left'>"+
                            "<img src='server.php/sipas/staf/get_image/foto?id={disposisi_masuk_penerima_id}' class='img img-circle img-32'>"+
                            "</div><div class='cell-text'>"+
                            "<div class='subtext ellipsis'>"+record.get('disposisi_masuk_penerima_nama')+"</div>"+
                            "<div class='supporttext supporttext-dark ellipsis'>"+jabatan+" - "+unit+"</div>"+
                            "</div>"+
                            "</div></div>"
                            );
                        return (new Ext.Template(tpl)).apply(record.getData());
                    },
                    width: 160,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_penerima_nama',
                    menuDisabled: true,
                    text: 'Nama Petikan',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelDefault = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Masuk');
                        return '<div class="margin-left-8">'+modelDefault.renderStatusRiwayat(value, record.get('disposisi_masuk_isbaca'), record.get('disposisi_masuk_pesan'), record.get('disposisi_masuk_status_tgl'), record.get('disposisi_masuk_baca_tgl'), record)+'</div>';
                    },
                    itemId: 'columnStatus',
                    width: 160,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_status',
                    text: 'Status',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value !== null){
                            return '<span style="white-space:normal !important;">'+ value +'</span>';
                        }else{
                            return '<span class="alternative">(Tidak Ada Komentar)</span>';
                        }
                    },
                    hidden: true,
                    itemId: 'columnKomentar',
                    width: 200,
                    sortable: true,
                    dataIndex: 'surat_stack_penyetuju_komentar',
                    text: 'Komentar'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'unitkerja_nama',
                    text: 'Unit Kerja'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'jabatan_nama',
                    text: 'Jabatan'
                },
                {
                    xtype: 'booleancolumn',
                    hidden: true,
                    width: 80,
                    dataIndex: 'required',
                    menuDisabled: true,
                    text: 'Wajib Diisi ?',
                    editor: {
                        xtype: 'checkboxfield'
                    }
                }
            ],
            viewConfig: {
                plugins: [
                    Ext.create('Ext.grid.plugin.DragDrop', {
                        pluginId: 'dragdrop',
                        ddGroup: 'aps_filetype_requirement_list_dd',
                        dragGroup: 'aps_filetype_requirement_list_drag',
                        dropGroup: 'aps_filetype_requirement_list_drop'
                    })
                ]
            }
        });

        me.callParent(arguments);
    },

    genAktif: function(value, aktif) {
        if(!aktif){
            return '<span style="color:#9E9E9E;">'+value+'</span>';
        }else{
            return value;
        }
    }

});