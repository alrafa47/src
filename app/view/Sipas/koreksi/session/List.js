/*
 * File: app/view/Sipas/koreksi/session/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.koreksi.session.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_koreksi_session_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Add',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.Edit',
        'SIPAS.view.Sipas.com.button.Delete',
        'SIPAS.view.Sipas.com.button.Approve',
        'SIPAS.view.Sipas.com.button.Revision',
        'SIPAS.view.Sipas.com.button.revision.List',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'SIPAS.view.Sipas.surat.penyetujuan.detail.Pane',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.toolbar.Fill',
        'Ext.form.field.ComboBox',
        'Ext.container.ButtonGroup',
        'Ext.grid.RowNumberer',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    languageable: true,
    languageMode: 'title',
    languageCode: 'koreksi_surat_list',
    dbclickToView: true,
    autoScroll: true,
    title: 'Koreksi Surat',
    titleAlign: 'left',
    allowDeselect: true,
    columnLines: false,
    disableSelection: true,
    emptyText: 'Tidak ada Data',
    store: 'Sipas.koreksi.session.draf.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                getRowClass: function(record, rowIndex, rowParams, store)
            	{
                    if(record.get("disposisi_masuk_isbaca") === 0 || record.get("disposisi_masuk_ispengingat") === true){
                    
                        return "x-grid-row-bold";
                    }
            	}
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarProperties',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh',
                            action: 'reload'
                        },
                        {
                            xtype: 'sipas_com_button_add',
                            roleName: 'surat_draft_insert',
                            action: 'add',
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            action: 'edit',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_edit',
                            roleName: 'surat_draft_update',
                            action: 'edit',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_delete',
                            roleName: 'surat_draft_delete',
                            action: 'delete',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'tbseparator',
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_approve',
                            roleName: 'surat_masuk_approve',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_revision',
                            roleName: 'surat_masuk_approve',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_revision_list',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        me.processStatus({
                            xtype: 'combobox',
                            itemId: 'Status',
                            width: 200,
                            editable: false,
                            hideTrigger: true,
                            displayField: 'nama',
                            store: {
                                fields: [
                                    'value',
                                    'nama'
                                ],
                                data: [
                                    
                                ]
                            },
                            valueField: 'value'
                        })
                    ]
                },
                me.processToolbarApproval({
                    xtype: 'toolbar',
                    dock: 'right',
                    hidden: true,
                    itemId: 'toolbarInfo',
                    vertical: true,
                    items: [
                        {
                            xtype: 'sipas_surat_penyetujuan_detail_pane'
                        }
                    ]
                }),
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.koreksi.session.draf.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = "<div class='subtext'>"+Ext.util.Format.date(value, 'd M Y')+"</div>",
                            jam = Ext.util.Format.date(value, 'H:i');
                        if(record.get('disposisi_masuk_isbaca') === 1){
                            return '<div class="cell-text"><div class="subtext">'+val+'</div><div class="supporttext supporttext-dark">'+jam+'</div></div>';
                        }else{
                            return '<div class="cell-text"><div class="subtext bold">'+val+'</div><div class="supporttext bold">'+jam+'</div></div>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    width: 100,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_terima_tgl',
                    text: 'Tgl.Terima',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelItipe = Ext.ModelManager.getModel('SIPAS.model.Sipas.Itipe');
                        // return modelItipe.renderItipe(record.get('disposisi_masuk_isbaca'), value);

                        var surat_model = record.get('surat_model'),
                            is_baca = record.get('disposisi_masuk_isbaca'),
                            jenis = '',
                            tipe = '',
                            baca = '';

                        if (surat_model === 2){
                            jenis = record.get('jenis_nama');
                            tipe = 'Eksternal';
                        } else {
                            jenis = record.get('jenis_nama');
                            tipe = 'Internal';
                        }

                        if (record.get('jenis_nama') === null || record.get('jenis_nama') === ''){
                            jenis = '-';
                        }

                        if (is_baca === 0){
                            baca = ' bold';
                        }else if (is_baca === 1){
                            baca = '';
                        }

                        return new Ext.XTemplate(['<div class="cell-text"><div class="subtext{is_baca}">{sub}</div><div class="supporttext{is_baca}">{support}</div></div>']).apply({
                        sub: jenis,
                        support: tipe,
                        is_baca: baca
                    });
                    },
                    width: 140,
                    dataIndex: 'itipe_nama',
                    text: 'Tipe Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                            mode = record.get('disposisi_mode');

                        if(mode == 'Petikan') {
                            return modelSurat.renderSuratSessionList(value, 'petikan', record);
                        } else {
                            return modelSurat.renderSuratSessionList(value, 'draf', record);
                        }
                    },
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    filterable: true,
                    minWidth: 200,
                    width: 420,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    text: 'Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Masuk'),
                            setuju_tgl = Ext.util.Format.date(record.get('disposisi_masuk_status_tgl'), 'd M Y H:i');
                        if(record.get('disposisi_masuk_isbaca') === 1){
                            if (record.get('disposisi_masuk_status') === 0 || record.get('disposisi_masuk_status') === 1){
                                return modelDM.renderStatusSetuju(record.get('disposisi_masuk_status'), record.get('disposisi_isbaca'));
                            } else {
                                return modelDM.renderStatusSetuju(record.get('disposisi_masuk_status'), record.get('disposisi_isbaca'), '<span class="alternative">Pada '+setuju_tgl+'</span>');
                            }
                        }else{
                            return modelDM.renderStatusBaca(record.get('disposisi_masuk_isbaca'), record.get('disposisi_masuk_isterus'), false, record);
                        }
                    },
                    filterable: false,
                    minWidth: 120,
                    width: 160,
                    sortable: false,
                    dataIndex: 'disposisi_masuk_isbaca',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value){
                            return new Ext.XTemplate([
                            '<div class="cell-text">',
                            '<div class="subtext">{date}</div>',
                            '<div class="supporttext supporttext-dark">{time}</div>',
                            '</div>']).apply({
                                date: Ext.util.Format.date(value, 'd M Y'),
                                time: Ext.util.Format.date(value, 'H:i')
                            });
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    width: 100,
                    sortable: true,
                    dataIndex: 'surat_distribusi_tgl',
                    text: 'Tgl.Kirim',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = (value) ? value : record.get('unit_nama');

                        if (val){
                            return val;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Pengirim Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    width: 200,
                    sortable: false,
                    dataIndex: 'surat_pengirim',
                    text: 'Pengirim Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'No.Registrasi');
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Registrasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 130,
                    sortable: true,
                    dataIndex: 'surat_registrasi',
                    text: 'No.Registrasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var val = value,
                        //     badge = '<span class="badge badge-light margin-right-4" style="background-color:'+record.get('sifat_color')+';">'+record.get('sifat_kode')+'</span>',
                        //     subtext = "<div class='supporttext'>"+record.get('surat_registrasi')+"</div>",
                        //     isBaca = record.get('disposisi_masuk_isbaca'),
                        //     modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                        //     valRender = modelSurat.renderBaca(isBaca, val, 'Perihal');

                        // if(record.get('sifat_color')){
                        //     return badge+valRender+subtext;
                        // }else{
                        //     return valRender+subtext;
                        // }
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Perihal Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    filterable: true,
                    hidden: true,
                    minWidth: 200,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    emptyCellText: '-',
                    text: 'Perihal'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelPegawai = Ext.ModelManager.getModel('SIPAS.model.Sipas.Staf');
                        return modelPegawai.renderRead(record.get('disposisi_pengirim_id'), record.get('disposisi_pengirim_nama'), record.get('disposisi_pengirim_jabatan_nama'), record.get('disposisi_pengirim_unit_nama'), record);
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Pengaju Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    minWidth: 200,
                    width: 300,
                    sortable: true,
                    dataIndex: 'disposisi_pengirim_nama',
                    text: 'Pengaju '
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var sub = record.get('surat_agenda_sub');
                        var val = (sub) ? value+'.'+sub : value;

                        if (value){
                            return val;
                        } else {
                            return '<span class="alternative">-</span>';
                        }

                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), val, 'No.Agenda');
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Agenda',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_agenda',
                    text: 'No.Agenda'
                }
            ]
        });

        me.processSipaskoreksisessionList(me);
        me.callParent(arguments);
    },

    processStatus: function(config) {
        if(this.isAsistensi)
        {
            return null;
        }
        return config;
    },

    processToolbarApproval: function(config) {
        if(this.withoutControl)
                        {
                            return null;
                        }
                        return config;
    },

    processSipaskoreksisessionList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    },

    genAktif: function(value, aktif) {
        if(!aktif){
            return '<span class="alternative">'+value+'</span>';
        }else{
            return value;
        }
    }

});