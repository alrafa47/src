/*
 * File: app/view/Sipas/unit/staf/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.unit.staf.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_unit_staf_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Add',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.Edit',
        'SIPAS.view.Sipas.com.button.Delete',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.form.field.ComboBox',
        'Ext.grid.RowNumberer',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    title: 'Pegawai',
    columnLines: false,
    emptyText: 'Tidak ada Data',
    store: 'Sipas.unit.staf.aktif.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarProperties',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh'
                        },
                        {
                            xtype: 'sipas_com_button_add',
                            roleable: true,
                            roleName: 'staf_insert'
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            roleable: true,
                            roleName: 'staf',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_edit',
                            roleable: true,
                            roleName: 'staf_update',
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_delete',
                            roleName: 'staf_delete',
                            roleable: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'Aktif',
                            width: 175,
                            labelAlign: 'right',
                            labelWidth: 65,
                            name: 'tampilcombo',
                            value: 'Aktif',
                            editable: false,
                            hideTrigger: true,
                            displayField: 'nama',
                            store: {
                                fields: [
                                    'value',
                                    'nama'
                                ],
                                data: [
                                    {
                                        value: 0,
                                        nama: 'Semua Pegawai'
                                    },
                                    {
                                        value: 1,
                                        nama: 'Pegawai Aktif'
                                    },
                                    {
                                        value: 2,
                                        nama: 'Pegawai Tidak Aktif'
                                    }
                                ]
                            },
                            valueField: 'value'
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.unit.staf.aktif.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var id = record.getId(),
                            aktif = record.get('staf_isaktif'),
                            tpl = this.dataTpl || (
                            this.tpl =
                            "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
                            "<img src='server.php/sipas/staf/get_image/foto?id={staf_id}' class='img img-circle img-32'>"+
                            "</div><div class='cell-text'><div class='subtext'>"+this.genAktif(value, aktif)+"</div><div class='supporttext supporttext-dark'>"+record.get('akun_nama')+"</div></div>"+
                            "</div>"
                            );
                        return (new Ext.Template(tpl)).apply(record.getData());
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Nama Pegawai',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                        this.up('gridpanel').filterHeader(this);
                                    }
                        }
                    },
                    width: 400,
                    sortable: true,
                    dataIndex: 'staf_nama',
                    text: 'Nama Pegawai'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('staf_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return "<span class='alternative'>-</span>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari NIP Pegawai',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    sortable: true,
                    dataIndex: 'staf_nip',
                    text: 'NIP'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('staf_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return "<span class='alternative'>-</span>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Username Pegawai',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    sortable: true,
                    dataIndex: 'akun_nama',
                    text: 'Username'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return record.generateGender();
                    },
                    filterable: true,
                    filter: {
                        type: 'boolean',
                        yesText: '<span style="color:blue;"><i class="icon ion-md-person grey-700-i"></i>Laki-laki</span>',
                        noText: '<span style="color:#E006FF;"><i class="icon ion-md-person pink-700-i"></i>Perempuan</span>'
                    },
                    hidden: true,
                    width: 100,
                    sortable: true,
                    dataIndex: 'staf_kelamin',
                    text: 'Jenis Kelamin'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('staf_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return "<span class='alternative'>-</span>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Unit Kerja',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                        this.up('gridpanel').filterHeader(this);
                                    }
                        }
                    },
                    width: 200,
                    sortable: true,
                    dataIndex: 'unit_nama',
                    text: 'Unit Kerja'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('staf_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return "<span class='alternative'>-</span>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Jabatan',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                        this.up('gridpanel').filterHeader(this);
                                    }
                        }
                    },
                    width: 200,
                    sortable: true,
                    dataIndex: 'jabatan_nama',
                    text: 'Jabatan'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('staf_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return "<span class='alternative'>-</span>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Hak Akses',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                        this.up('gridpanel').filterHeader(this);
                                    }
                        }
                    },
                    width: 200,
                    sortable: true,
                    dataIndex: 'peran_nama',
                    text: 'Hak Akses'
                }
            ],
            selModel: Ext.create('Ext.selection.RowModel', {
                allowDeselect: false
            })
        });

        me.processSipasstafList(me);
        me.callParent(arguments);
    },

    processSipasstafList: function(config) {
        if (! config.features) {
            config.features=[];
        }

        config.features.push({
            ftype: 'filters',
            encode: true,
            local: false
        });

        return config;
    },

    genAktif: function(value, aktif) {
        if(!aktif){
            return '<span class="alternative">'+value+'</span>';
        }else{
            return value;
        }
    }

});