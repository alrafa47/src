/*
 * File: app/view/Sipas/session/changepassword/Popup.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.session.changepassword.Popup', {
    extend: 'Ext.window.Window',
    alias: 'widget.sipas_session_changepassword_popup',

    requires: [
        'SIPAS.view.Sipas.com.button.Save',
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Button'
    ],

    height: 200,
    width: 450,
    layout: 'fit',
    constrainHeader: true,
    title: 'Ganti Password',
    maximizable: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    border: false,
                    bodyPadding: '8 16 8 16',
                    header: false,
                    title: 'Ganti Password',
                    items: [
                        {
                            xtype: 'textfield',
                            initialPassField: 'newpass',
                            anchor: '100%',
                            itemId: 'textfieldOldpassword',
                            fieldLabel: 'Password Lama',
                            labelWidth: 120,
                            name: 'oldpassword',
                            submitValue: false,
                            inputType: 'password',
                            emptyText: 'Masukkan password lama'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'textfieldNewpassword',
                            fieldLabel: 'Password Baru',
                            labelWidth: 120,
                            name: 'newpassword',
                            submitValue: false,
                            inputType: 'password',
                            emptyText: 'Masukkan password baru',
                            listeners: {
                                validitychange: {
                                    fn: me.onNewpassValidityChange,
                                    scope: me
                                },
                                blur: {
                                    fn: me.onNewpassBlur,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            initialPassField: '#textfieldNewpassword',
                            anchor: '100%',
                            itemId: 'textfieldRenewpassword',
                            fieldLabel: 'Ulangi',
                            labelWidth: 120,
                            name: 'renewpassword',
                            submitValue: false,
                            inputType: 'password',
                            emptyText: 'Ulangi password baru',
                            vtypeText: 'Password tidak sesuai'
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'container',
                    dock: 'bottom',
                    itemId: 'toolbarControl',
                    ui: 'footer',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        },
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_save'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onNewpassValidityChange: function(field, isValid, eOpts) {
        field.next().validate();
    },

    onNewpassBlur: function(component, e, eOpts) {
        component.next().validate();
    }

});