/*
 * File: app/view/Sipas/session/notification/agenda/eksternal/keluar/berkas/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.session.notification.agenda.eksternal.keluar.berkas.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_session_notification_agenda_eksternal_keluar_berkas_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Process',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'Ext.form.field.ComboBox',
        'Ext.view.BoundList',
        'Ext.XTemplate',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.grid.RowNumberer',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    languageCode: 'notif_agd_keluar_berkas_list',
    languageMode: 'title',
    languageable: true,
    titleAlign: 'left',
    allowDeselect: true,
    columnLines: false,
    disableSelection: true,
    emptyText: 'Tidak ada data',
    store: 'Sipas.session.notification.agenda.eksternal.keluar.berkas.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                getRowClass: function(record, rowIndex, rowParams, store)
            	{
                    var use_retensi = record.get('surat_useretensi'),
                        tanggal = new Date(),
                        retensi_tgl = record.get('surat_retensi_tgl'),
                        tanggal_display = Ext.util.Format.date(retensi_tgl, 'd M Y');
                        
                    if (use_retensi){
                        retensi_tgl.setHours(0,0,0,0);
                        tanggal.setHours(0,0,0,0);
                        var isretensi = (retensi_tgl < tanggal)? 1 : 0;
            
                        if(isretensi){
                            return "x-grid-row-alternative";
                        }
                    }
            	}
            },
            dockedItems: [
                me.processToolbarProperties({
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarProperties',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            itemId: 'comboScope',
                            minWidth: 300,
                            editable: false,
                            hideTrigger: true,
                            displayField: 'unit_nama',
                            store: 'Sipas.surat.scope.Combo',
                            valueField: 'unit_id',
                            listConfig: {
                                xtype: 'boundlist',
                                itemSelector: 'div',
                                itemTpl: [
                                    '{unit_nama} <span style="color: gray">({unit_kode})</span>'
                                ]
                            }
                        },
                        {
                            xtype: 'sipas_com_button_refresh',
                            action: 'reload'
                        },
                        {
                            xtype: 'sipas_com_button_process',
                            hidden: true,
                            text: 'TAMBAH DARI MASUK INTERNAL'
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill',
                            width: ' '
                        }
                    ]
                }),
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.session.notification.agenda.eksternal.keluar.berkas.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var jam = "<div class='supporttext supporttext-dark'>"+ Ext.util.Format.date(record.get('surat_properti_buat_tgl'), 'd M Y H:i') +"</div>";
                        if(value){
                            return "<div class='subtext'>"+value+"</div>"+jam;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Registrasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 140,
                    sortable: true,
                    dataIndex: 'surat_registrasi',
                    text: 'No.Registrasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y'),
                            jam = "<div class='supporttext supporttext-dark'>"+ Ext.util.Format.date(value, 'H:i') +"</div>";

                        return "<div class='subtext'>"+val+"</div>"+jam;
                    },
                    filter: {
                        type: 'date'
                    },
                    filterable: true,
                    hidden: true,
                    width: 100,
                    sortable: true,
                    dataIndex: 'surat_properti_buat_tgl',
                    text: 'Tgl.Registrasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderSurat(value, record, 2);
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 420,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    text: 'Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderStatusPenyetujuan(value, record);
                    },
                    width: 200,
                    sortable: true,
                    dataIndex: 'surat_setuju',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderPrioritas(record.get('surat_prioritas'), value, record.get('surat_isselesai'), record);
                    },
                    filterable: true,
                    featureName: 'prioritas',
                    featureable: true,
                    languageable: true,
                    languageMode: 'text',
                    languageCode: 'prioritas_agenda_surat_keluar_eksternal_list',
                    filter: {
                        type: 'date'
                    },
                    width: 140,
                    sortable: true,
                    dataIndex: 'surat_prioritas_tgl',
                    text: 'Urgensi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderRetensi(record.get('surat_useretensi'), value, record);
                    },
                    filterable: true,
                    filter: {
                        type: 'date'
                    },
                    featureable: true,
                    featureName: 'retensi',
                    width: 140,
                    sortable: true,
                    dataIndex: 'surat_retensi_tgl',
                    text: 'Masa Aktif'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelDefault = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                            val = Ext.util.Format.date(record.get('surat_nomor_tgl'), 'd M Y H:i'),
                            subtext = "<div class='supporttext supporttext-dark'>"+val+"</div>";
                        if(record.get('surat_nomor_tgl')){
                            return "<div class='subtext'>"+modelDefault.renderNomor(value, record) + subtext+"</div>";
                        }else{
                            return "<div class='subtext'>"+modelDefault.renderNomor(value, record)+"</div>";
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'surat_nomor',
                    text: 'No.Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value)
                        {
                            return '<i class="icon ion-md-attach grey-700 margin-right-4"></i>'+value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    hidden: true,
                    width: 60,
                    dataIndex: 'surat_jumlah_dokumen',
                    text: '<i class="icon ion-md-attach grey-700"></i>'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var badge = '<span class="badge badge-light margin-right-4" style="background-color:'+record.get('sifat_color')+';">'+record.get('sifat_kode')+'</span>',
                        //     perihal = '';
                        // // if(record.get('surat_jumlah_dokumen') != 0){
                        // //     perihal = ' - ('+record.get('surat_jumlah_dokumen') + ' berkas)';
                        // // }
                        // var subtext = "<div class='supporttext'>"+record.get('surat_registrasi')+perihal+"</div>";
                        // if(value){
                        //     if(record.get('sifat_color')){
                        //         return badge + value + subtext;
                        //     }else{
                        //         return value + subtext;
                        //     }
                        // }else{
                        //     return '<span class="alternative">-</span>' + subtext;
                        // }
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Perihal Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    emptyCellText: '-',
                    text: 'Perihal'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Dari',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_pengirim',
                    text: 'Dari'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Kepada',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_tujuan',
                    text: 'Kepada'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                        if(value){
                            var sub = record.get('surat_agenda_sub');
                            return (sub) ? value+'.'+sub : value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Agenda',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_agenda',
                    text: 'No.Agenda'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                        if(record.get('surat_keluar_backdate') !== 0){
                            return Ext.util.Format.date(value, 'd M Y');
                            //     return Ext.util.Format.date(value, 'd M Y') + ' <i class="icon ion-md-checkmark info"></i><span class="alternative">mundur '+record.get('surat_keluar_backdate')+' hari</span>';
                        }
                        else{
                            return Ext.util.Format.date(value, 'd M Y');
                        }

                    },
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 100,
                    dataIndex: 'surat_tanggal',
                    text: 'Tgl.Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filter: {
                        type: 'numeric'
                    },
                    hidden: true,
                    width: 60,
                    sortable: true,
                    dataIndex: 'surat_lampiran',
                    text: 'Lampiran'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Jenis',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    featureable: true,
                    featureName: 'jenis',
                    hidden: true,
                    sortable: true,
                    dataIndex: 'jenis_nama',
                    text: 'Jenis'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Sifat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    sortable: true,
                    dataIndex: 'sifat_nama',
                    text: 'Sifat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Media',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    featureName: 'media',
                    featureable: true,
                    hidden: true,
                    sortable: true,
                    dataIndex: 'media_nama',
                    text: 'Media'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            return value;
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Lokasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    featureable: true,
                    featureName: 'lokasi',
                    hidden: true,
                    sortable: true,
                    dataIndex: 'lokasi_nama',
                    text: 'Lokasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value){
                            var val = value,
                                modelPegawai = Ext.ModelManager.getModel('SIPAS.model.Sipas.Staf');

                            return modelPegawai.renderPegawaiList(record.get('surat_properti_pembuat_id'), val, record.get('surat_properti_pembuat_jabatan_nama'), record.get('surat_properti_pembuat_unit_nama'), record);
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Pembuat Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'surat_properti_pembuat_nama',
                    text: 'Pembuat'
                }
            ]
        });

        me.processSipassessionnotificationagendaeksternalkeluarberkasList(me);
        me.callParent(arguments);
    },

    processToolbarProperties: function(config) {
        if(this.isSession)
        {
            return null;
        }
        return config;
    },

    processSipassessionnotificationagendaeksternalkeluarberkasList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    }

});