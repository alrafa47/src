/*
 * File: app/view/Sipas/pelaporan/Pane.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.pelaporan.Pane', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.sipas_pelaporan_pane',

    requires: [
        'Ext.grid.Panel',
        'Ext.tab.Tab',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Text',
        'Ext.grid.column.Column',
        'Ext.grid.feature.Grouping',
        'Ext.XTemplate'
    ],

    languageCode: 'pelaporan_list',
    languageMode: 'title',
    languageable: true,
    title: 'Daftar Arsip Aktif',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                me.processPaneList({
                    xtype: 'gridpanel',
                    itemId: 'paneList',
                    title: 'Daftar Arsip Aktif',
                    store: 'Sipas.pelaporan.List',
                    tabConfig: {
                        xtype: 'tab',
                        style: {
                            'font-weight': '500'
                        }
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            hidden: true,
                            items: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    itemId: 'textSearch',
                                    fieldLabel: '<i class="icon ion-md-search"><i>',
                                    labelSeparator: ' ',
                                    labelWidth: 16
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 32,
                            dataIndex: 'iconCls',
                            text: ''
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                metaData.style = "padding: 16px 40px 16px 40px;";

                                var tpl = new Ext.XTemplate(['<div class="cell-row"><div class="cell-visual cell-visual-left">',
                                    '<div class="img img-circle img-32">',
                                    '<i class="icon ion-md-clipboard"></i>',
                                    '</div>',
                                    '</div>',
                                    '<div class="cell-text">',
                                    '<div class="subtext">{nama}</div>',
                                    '<div class="supporttext">{ket}</div>',
                                    '</div></div>']);

                                return tpl.apply({
                                    ket: record.get('subtitle'),
                                    nama: value
                                });
                            },
                            items: {
                                xtype: 'textfield',
                                flex: 1,
                                margin: 2,
                                cls: 'x-field-toolbar',
                                emptyText: 'Cari Arsip Aktif',
                                listeners: {
                                    change: function(textfield, e, eOpts){
                                		                                    this.up('gridpanel').filterHeader(this);
                                		                                }
                                }
                            },
                            cls: 'x-column-header-notext',
                            padding: '12 40',
                            width: 560,
                            dataIndex: 'title',
                            text: ''
                        }
                    ],
                    features: [
                        {
                            ftype: 'grouping',
                            collapsible: false,
                            groupHeaderTpl: [
                                '{name}'
                            ]
                        }
                    ]
                })
            ]
        });

        me.callParent(arguments);
    },

    processPaneList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: true
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    }

});