/*
 * File: app/view/Sipas/pelaporan/rekap/grafik/eksternal/Pane.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.pelaporan.rekap.grafik.eksternal.Pane', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.sipas_pelaporan_rekap_grafik_eksternal_pane',

    requires: [
        'SIPAS.view.Sipas.com.reportfilter.rekap.Bulanan',
        'SIPAS.view.Sipas.com.button.Refresh',
        'Ext.toolbar.Toolbar',
        'Ext.form.FieldContainer',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.chart.Chart',
        'Ext.util.Point',
        'Ext.chart.axis.Numeric',
        'Ext.chart.axis.Category',
        'Ext.chart.series.Line',
        'Ext.chart.Legend'
    ],

    filterMonth: 'Bulan',
    header: false,
    title: 'Grafik Surat Yang Diterima',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'top',
                    items: [
                        {
                            xtype: 'sipas_com_reportfilter_rekap_bulanan'
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'sipas_com_button_refresh'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'chart',
                    flex: 1,
                    animate: true,
                    store: 'Sipas.pelaporan.rekap.grafik.Line',
                    axes: [
                        {
                            type: 'Numeric',
                            fields: [
                                'emasuk',
                                'ekeluar'
                            ],
                            label: {
                                renderer: function(v) { return v; }
                            },
                            grid: true,
                            majorTickSteps: 2,
                            minorTickSteps: 1,
                            title: 'Jumlah',
                            adjustMaximumByMajorUnit: true,
                            adjustMinimumByMajorUnit: true,
                            decimals: 0,
                            minimum: 0,
                            position: 'left'
                        },
                        {
                            type: 'Category',
                            fields: [
                                'day'
                            ],
                            label: {
                                rotate: {
                                    degrees: -45
                                }
                            },
                            grid: true,
                            title: 'Tanggal',
                            width: 400,
                            position: 'bottom'
                        }
                    ],
                    series: [
                        {
                            type: 'line',
                            highlight: {
                                fill: '#000',
                                radius: 2,
                                'stroke-width': 1,
                                stroke: '#fff'
                            },
                            tips: {
                                trackMouse: true,
                                style: 'background: #FFF',
                                height: 20,
                                width: 150,
                                renderer: function(storeItem, item) {
                                    var title = item.series.title;
                                    this.setTitle(title + ' ' + storeItem.get('day') + ' (' + storeItem.get(item.series.yField) +')');
                                }
                            },
                            title: 'Agenda Masuk',
                            axis: 'left',
                            xField: 'day',
                            yField: 'emasuk',
                            markerConfig: {
                                radius: 2
                            },
                            style: {
                                'stroke-width': 2
                            }
                        },
                        {
                            type: 'line',
                            highlight: {
                                fill: '#000',
                                radius: 2,
                                'stroke-width': 1,
                                stroke: '#fff'
                            },
                            tips: {
                                trackMouse: true,
                                style: 'background: #FFF',
                                height: 20,
                                width: 150,
                                renderer: function(storeItem, item) {
                                    var title = item.series.title;
                                    this.setTitle(title + ' ' + storeItem.get('day') + ' (' + storeItem.get(item.series.yField) +')');
                                }
                            },
                            title: 'Agenda Keluar',
                            axis: 'left',
                            xField: 'day',
                            yField: 'ekeluar',
                            markerConfig: {
                                radius: 2
                            },
                            style: {
                                'stroke-width': 2
                            }
                        }
                    ],
                    legend: {

                    }
                }
            ]
        });

        me.callParent(arguments);
    }

});