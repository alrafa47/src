/*
 * File: app/view/Sipas/masuk/agenda/distribusi/penerima/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.masuk.agenda.distribusi.penerima.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_masuk_agenda_distribusi_penerima_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Add',
        'SIPAS.view.Sipas.com.button.Delete',
        'SIPAS.view.Sipas.com.button.Plus',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.form.Label',
        'Ext.toolbar.Fill',
        'Ext.toolbar.Separator',
        'Ext.button.Button',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.grid.plugin.RowEditing'
    ],

    itemId: 'Sipas.disposisi.forward.penerima.List1',
    bodyBorder: false,
    frameHeader: false,
    header: false,
    title: 'Daftar Penerima',
    allowDeselect: true,
    hideHeaders: true,
    store: 'Sipas.masuk.agenda.distribusi.penerima.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    itemId: 'disposisi_penerima',
                    width: 100,
                    fieldLabel: 'Label',
                    name: 'disposisi_penerima_penerima'
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarControl',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'label',
                            cls: 'alternative bold',
                            padding: 5,
                            text: 'Penerima',
                            listeners: {
                                afterrender: {
                                    fn: me.onLabelAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'sipas_com_button_add',
                            roleable: false,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_delete',
                            roleable: false,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_plus',
                            text: 'Tambah Penerima'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'actioncolumn',
                    width: 24,
                    items: [
                        {
                            action: 'rundelete',
                            iconCls: 'icon ion-md-close red-700-i',
                            tooltip: 'Hapus'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var id = record.getId(),
                            jabatan = record.get('jabatan_nama') ? record.get('jabatan_nama') : '(Tidak ada jabatan)',
                            unit = record.get('unitkerja_nama') ? record.get('unitkerja_nama') : '(Tidak ada unit)',
                            tpl = this.dataTpl || (
                            this.tpl =
                            "<div class='cell-row'><div class='cell-visual cell-visual-left'>"+
                            "<img src='server.php/sipas/staf/get_image/foto?id={staf_id}' class='img img-circle img-32'>"+
                            "</div>"+
                            "<div class='cell-text'>"+
                            "<div class='subtext ellipsis'>"+record.get('staf_nama')+"</div>"+
                            "<div class='supporttext supporttext-dark ellipsis'>"+jabatan+" - "+unit+"</div>"+
                            "</div></div>");

                        return (new Ext.Template(tpl)).apply(record.getData());
                    },
                    minWidth: 200,
                    sortable: true,
                    dataIndex: 'staf_nama',
                    text: '',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    minWidth: 140,
                    width: 120,
                    sortable: true,
                    dataIndex: 'unitkerja_nama',
                    text: 'Unit Kerja'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    minWidth: 140,
                    width: 140,
                    sortable: true,
                    dataIndex: 'jabatan_nama',
                    text: 'Jabatan'
                }
            ],
            plugins: [
                Ext.create('Ext.grid.plugin.RowEditing', {
                    pluginId: 'roweditor'
                })
            ]
        });

        me.callParent(arguments);
    },

    onLabelAfterRender: function(component, eOpts) {
        component.setText(component.up('panel').title);
    }

});