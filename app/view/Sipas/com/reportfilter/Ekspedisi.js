/*
 * File: app/view/Sipas/com/reportfilter/Ekspedisi.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.com.reportfilter.Ekspedisi', {
    extend: 'Ext.form.FieldContainer',
    alias: 'widget.sipas_com_reportfilter_ekspedisi',

    requires: [
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    filterDate: 'Pada Tanggal',
    filterYear: 'Pada Tahun',
    filterMonth: 'Pada Bulan',
    filterDateRange: 'Rentang Tanggal',
    filterAfterDate: 'Setelah Tanggal',
    filterBeforeDate: 'Sebelum Tanggal',
    fieldLabel: '',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        me.addEvents(
            'process'
        );

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'combobox',
                    flex: 1,
                    itemId: 'comboFilter',
                    fieldLabel: 'No. Surat',
                    labelWidth: 70,
                    hideTrigger: true,
                    displayField: 'surat_masuk_nomor',
                    minChars: 1,
                    store: 'Sipas.masuk.agenda.Combo',
                    typeAhead: true,
                    valueField: 'surat_masuk_surat'
                },
                me.processButtonProcess({
                    xtype: 'button',
                    flex: 1,
                    cls: 'x-btn-bordered',
                    itemId: 'buttonProcess',
                    text: '<b>PROSES</b>',
                    listeners: {
                        click: {
                            fn: me.onButtonProcessClick,
                            scope: me
                        }
                    }
                })
            ]
        });

        me.callParent(arguments);
    },

    processButtonProcess: function(config) {
        var me = this;
        return Ext.apply(config, me.filterProcessConfig);
    },

    onButtonProcessClick: function(button, e, eOpts) {
        filter= this.down('#comboFilter').getValue();
        this.fireEventArgs('process',[this,filter, filter, e, eOpts]);
    }

});