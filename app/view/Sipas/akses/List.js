/*
 * File: app/view/Sipas/akses/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.akses.List', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.sipas_akses_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Config',
        'SIPAS.view.Sipas.com.button.Uncheck',
        'SIPAS.view.Sipas.com.button.Check',
        'SIPAS.view.Sipas.com.button.Save',
        'Ext.button.Button',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.grid.column.CheckColumn',
        'Ext.form.field.Checkbox',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Display',
        'Ext.grid.column.Action',
        'Ext.ux.grid.FiltersFeature'
    ],

    roleName: 'hakakses_settingrole',
    border: 0,
    itemId: 'listSipasAkses',
    title: 'Daftar Akses',
    emptyText: 'Tidak ada Data',
    rowLines: true,
    store: 'Sipas.akses.List',
    rootVisible: false,
    useArrows: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'container',
                    dock: 'top',
                    width: 100,
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        },
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh',
                            hidden: true,
                            ui: 'default-toolbar'
                        },
                        {
                            xtype: 'sipas_com_button_config',
                            roleable: true,
                            roleName: 'hakakses_menu',
                            hidden: true,
                            ui: 'default-toolbar',
                            text: 'Atur Menu'
                        },
                        {
                            xtype: 'container',
                            flex: 1
                        },
                        {
                            xtype: 'sipas_com_button_uncheck',
                            ui: 'default-toolbar'
                        },
                        {
                            xtype: 'sipas_com_button_check',
                            ui: 'default-toolbar'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    dock: 'bottom',
                    ui: 'footer',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        },
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_save'
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    height: 60,
                    hidden: true,
                    layout: {
                        type: 'hbox',
                        padding: 2
                    },
                    items: [
                        {
                            xtype: 'displayfield',
                            flex: 1,
                            height: '100%',
                            itemId: 'textInformation',
                            fieldLabel: '<i class="icon ion-md-information-circle"></i>',
                            labelSeparator: ' ',
                            labelWidth: 24,
                            value: '(tidak ada informasi)'
                        }
                    ]
                }
            ],
            viewConfig: {

            },
            columns: [
                {
                    xtype: 'treecolumn',
                    sortable: false,
                    dataIndex: 'fitur_nama',
                    menuDisabled: true,
                    text: 'Daftar Menu',
                    flex: 1
                },
                {
                    xtype: 'checkcolumn',
                    width: 60,
                    sortable: false,
                    dataIndex: 'akses_isboleh',
                    menuDisabled: true,
                    text: 'Akses',
                    editor: {
                        xtype: 'checkboxfield',
                        inputValue: '1',
                        uncheckedValue: '0'
                    }
                },
                {
                    xtype: 'actioncolumn',
                    disabled: true,
                    hidden: true,
                    width: 40,
                    align: 'center',
                    items: [
                        {
                            iconCls: 'icon ion-md-information-circle red-700-i'
                        }
                    ]
                }
            ],
            listeners: {
                beforeload: {
                    fn: me.onListSipasAksesBeforeLoad,
                    scope: me
                },
                load: {
                    fn: me.onListSipasAksesLoad,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onListSipasAksesBeforeLoad: function(store, operation, eOpts) {
        this.getView().setLoading(true);
    },

    onListSipasAksesLoad: function(treestore, node, records, successful, eOpts) {
        this.getView().setLoading(false);
    }

});