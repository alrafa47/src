/*
 * File: app/view/Sipas/user/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.user.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_user_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Add',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.Edit',
        'SIPAS.view.Sipas.com.button.Delete',
        'Ext.button.Button',
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Boolean',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.ux.grid.FiltersFeature'
    ],

    roleable: false,
    roleName: 'user',
    border: 0,
    itemId: 'listHakaksesUser',
    title: 'User',
    store: 'Sipas.user.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh'
                        },
                        {
                            xtype: 'sipas_com_button_add',
                            roleName: 'user_insert',
                            roleable: true
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            disabled: true
                        },
                        {
                            xtype: 'sipas_com_button_edit',
                            roleName: 'user_update',
                            roleable: true,
                            disabled: true
                        },
                        {
                            xtype: 'sipas_com_button_delete',
                            roleName: 'user_delete',
                            roleable: true,
                            disabled: true
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.user.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer',
                    minWidth: 40
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                                            this.up('gridpanel').filterHeader(this);
                                                        }
                        }
                    },
                    filterable: true,
                    minWidth: 200,
                    sortable: true,
                    dataIndex: 'user_name',
                    text: 'Username',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                                            this.up('gridpanel').filterHeader(this);
                                                        }
                        }
                    },
                    filterable: true,
                    minWidth: 200,
                    sortable: true,
                    dataIndex: 'role_name',
                    text: 'Hak Akses',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                                            this.up('gridpanel').filterHeader(this);
                                                        }
                        }
                    },
                    filterable: true,
                    minWidth: 300,
                    sortable: true,
                    dataIndex: 'user_email',
                    text: 'E-mail',
                    flex: 1
                },
                {
                    xtype: 'booleancolumn',
                    dataIndex: 'user_isactive',
                    text: 'Aktif'
                }
            ]
        });

        me.processSipasuserList(me);
        me.callParent(arguments);
    },

    processSipasuserList: function(config) {
        var filters = {
                    ftype: 'filters',
                    encode: true,
                    local: false
                };

                if (! config.features) {
                    config.features=filters;
                } else {
                    config.features.push(filters);
                }

                return config;
    },

    reload: function(options) {

    }

});