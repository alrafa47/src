/*
 * File: app/view/Sipas/kelas/hirarki/Lookup.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.kelas.hirarki.Lookup', {
    extend: 'Ext.window.Window',
    alias: 'widget.sipas_kelas_hirarki_lookup',

    requires: [
        'SIPAS.view.Sipas.com.button.Putin',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.selection.CheckboxModel',
        'Ext.button.Button',
        'SIPAS.store.Sipas.kelas.hirarki.Lookup'
    ],

    border: 0,
    height: 450,
    width: 650,
    layout: 'fit',
    title: 'Klasifikasi Surat',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'treepanel',
                    height: 250,
                    width: 400,
                    allowDeselect: true,
                    hideHeaders: false,
                    rowLines: true,
                    store: 'Sipas.kelas.hirarki.Lookup',
                    rootVisible: false,
                    useArrows: true,
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'treecolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (record.get('kelas_isaktif') == '1'){
                                    return (new Ext.Template('{kelas_kode} {kelas_nama}')).apply(record.getData());
                                } else {
                                    return (new Ext.Template('<span class="alternative">{kelas_kode} {kelas_nama}</span>')).apply(record.getData());
                                }
                            },
                            items: {
                                xtype: 'textfield',
                                emptyText: 'Cari Nama Klasifikasi',
                                flex: 1,
                                margin: 2,
                                listeners: {
                                    change: function(textfield, e, eOpts){
                                            if(e){
                                                textfield.up('treepanel').getStore().filters.add('filtersId', new Ext.util.Filter({
                                                  value:e,
                                                  property:'kelas_nama'
                                                }));
                                                textfield.up('treepanel').getStore().load();
                                            }else{
                                                textfield.up('treepanel').getStore().filters.removeAtKey('filtersId');
                                                textfield.up('treepanel').getStore().load();
                                            }
                                        }
                                }
                            },
                            sortable: false,
                            dataIndex: 'kelas_nama',
                            flex: 1
                        }
                    ],
                    selModel: Ext.create('Ext.selection.CheckboxModel', {
                        allowDeselect: false
                    })
                }
            ],
            dockedItems: [
                {
                    xtype: 'container',
                    dock: 'bottom',
                    itemId: 'toolbarControl',
                    ui: 'footer',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        },
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_putin',
                            margins: '4 4 6 4'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});