/*
 * File: app/view/Sipas/staf/wakil/monitoring/riwayat/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.staf.wakil.monitoring.riwayat.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_staf_wakil_monitoring_riwayat_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.form.field.ComboBox',
        'Ext.grid.RowNumberer',
        'Ext.grid.View',
        'Ext.toolbar.Paging'
    ],

    isAsistensi: true,
    clickToView: true,
    languageCode: 'riwayat_disposisi_list',
    languageMode: 'title',
    languageable: true,
    dbclickToView: true,
    autoScroll: true,
    closable: true,
    title: 'Riwayat Disposisi',
    allowDeselect: true,
    disableSelection: true,
    emptyText: 'Tidak ada Data',
    store: 'Sipas.riwayat.session.terkirim.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                getRowClass: function(record, rowIndex, rowParams, store)
            	{
                     if(record.get("disposisi_sorter") === 0){
                        if (record.get("disposisi_iscabut") === 1){
                            return "x-grid-row-bold-danger";
                        } else {
                            return "x-grid-row-bold";
                        }
                     } else {
                        if (record.get("disposisi_iscabut") === 1){
                            return "x-grid-row-danger";
                        }
                     }
            	}
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh',
                            action: 'reload'
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            action: 'view',
                            disabled: true,
                            hidden: true,
                            text: 'Lihat Riwayat'
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        me.processAktifAsisten({
                            xtype: 'combobox',
                            cls: 'x-field-toolbar',
                            itemId: 'AktifAsisten',
                            width: 200,
                            editable: false,
                            hideTrigger: true,
                            displayField: 'nama',
                            store: {
                                fields: [
                                    'value',
                                    'nama'
                                ],
                                data: [
                                    
                                ]
                            },
                            valueField: 'value'
                        })
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    itemId: 'pagingRiwayat',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.riwayat.session.terkirim.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = value && Ext.util.Format.date(value, 'd M Y'),
                            jam = "<div class='supporttext supporttext-dark'>"+ Ext.util.Format.date(value, 'H:i') +"</div>";

                        if (record.get('disposisi_iscabut') === 1){
                            jam = "<div class='supporttext red-700-i'>"+ Ext.util.Format.date(value, 'H:i') +"</div>";
                        }

                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        return '<div class="cell-text">'+modelDM.renderCabut(val, record.get('disposisi_iscabut'))+jam+'</div>';
                    },
                    filter: {
                        type: 'date'
                    },
                    filterable: true,
                    width: 100,
                    dataIndex: 'disposisi_tgl',
                    text: 'Tgl.Riwayat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var disposisi = '',
                            cabut_sub = ' grey-700-i',
                            cabut = '',
                            notadinas = '',
                            tpl_model = '',
                            model = record.get('surat_model');

                        if (record.get('disposisi_iscabut') === 1){
                            cabut = ' red-500-i';
                            cabut_sub = ' red-500-i';
                        }

                        if (value === 1){
                            notadinas = '<div class="subtext'+cabut_sub+'">Nota Dinas</div>';
                            if (model === 1){
                                tpl_model = '<div class="supporttext'+cabut+'">Masuk Eksternal</div>';
                            } else if (model === 2){
                                tpl_model = '<div class="supporttext'+cabut+'">Keluar Eksternal</div>';
                            } else if (model === 3){
                                tpl_model = '<div class="supporttext'+cabut+'">Masuk Internal</div>';
                            }
                            return '<div class="cell-text">'+notadinas+tpl_model+'</div>';
                        } else {
                            disposisi = '<div class="subtext'+cabut_sub+'">Disposisi</div>';
                            if (model === 1){
                                tpl_model = '<div class="supporttext'+cabut+'">Masuk Eksternal</div>';
                            } else if (model === 2){
                                tpl_model = '<div class="supporttext'+cabut+'">Keluar Eksternal</div>';
                            } else if (model === 3){
                                tpl_model = '<div class="supporttext'+cabut+'">Masuk Internal</div>';
                            }
                            return '<div class="cell-text">'+disposisi+tpl_model+'</div>';
                        }

                        // modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderCabut(val, record.get('disposisi_iscabut'));
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Tipe Riwayat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 140,
                    dataIndex: 'disposisi_model_sub',
                    text: 'Tipe Riwayat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderSuratSessionList(value, 'riwayat', record);
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 420,
                    dataIndex: 'surat_perihal',
                    text: 'Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var model = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat'),
                            is_disposisi = true;

                        if (record.get('disposisi_model_sub') == 1){
                            is_disposisi = false;
                        }
                        return model.renderDetailRiwayat(record, is_disposisi);
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Arahan',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 420,
                    dataIndex: 'perintah_nama',
                    text: 'Arahan'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Registrasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 200,
                    dataIndex: 'surat_registrasi',
                    text: 'No.Registrasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y'),
                            jam = Ext.util.Format.date(value, 'H:i');
                        if(record.get('disposisi_iscabut') === 1){
                            return '<div class="cell-text"><div class="subtext red-700-i">'+val+'</div><div class="supporttext red-700-i">'+jam+'</div></div>';
                        }else{
                            return '<div class="cell-text"><div class="subtext">'+val+'</span></div><div class="supporttext supporttext-dark">'+jam+'</div></div>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_properti_buat_tgl',
                    text: 'Tgl.Registrasi',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var badge = '<span class="badge badge-light margin-right-4" style="background-color:'+record.get('sifat_color')+';">'+record.get('sifat_kode')+'</span>',
                            subtext = "<div class='supporttext supporttext-dark'>"+record.get('surat_registrasi')+"</div>",
                            modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat'),
                            valRender = modelDM.renderCabut(value, record.get('disposisi_iscabut'));

                        // if(record.get('sifat_color')){
                        //     return badge+valRender+subtext;
                        // }else{
                        //     return valRender+subtext;
                        // }

                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Perihal Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    dataIndex: 'surat_perihal',
                    emptyCellText: '-',
                    text: 'Perihal'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = (value)? value : record.get('unit_source_nama'),
                            modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat'),
                            valRender = modelDM.renderCabut(val, record.get('disposisi_iscabut'));

                        return valRender;
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Dari',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_pengirim',
                    text: 'Dari'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderJumlah(value, record.get('disposisi_iscabut'));
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Jumlah Penerima',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 150,
                    dataIndex: 'disposisi_jumlah_penerima',
                    text: 'Penerima'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Kepada',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    dataIndex: 'surat_tujuan',
                    text: 'Kepada'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Agenda',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    dataIndex: 'surat_agenda',
                    text: 'No.Agenda'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 200,
                    dataIndex: 'surat_nomor',
                    text: 'No.Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y'),
                            jam = Ext.util.Format.date(value, 'H:i');
                        if(record.get('disposisi_iscabut') === 1){
                            return '<div class="cell-text"><div class="subtext red-700-i">'+val+'</div><div class="supporttext red-700-i">'+jam+'</div></div>';
                        }else{
                            return '<div class="cell-text"><div class="subtext">'+val+'</span></div><div class="supporttext supporttext-dark">'+jam+'</div></div>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_tanggal',
                    text: 'Tgl.Surat',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_iscabut'), value, 'Jenis');
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Jenis',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    dataIndex: 'jenis_nama',
                    text: 'Jenis'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_iscabut'), value, 'Media');
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Media',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    dataIndex: 'media_nama',
                    text: 'Media'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        modelDM = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Riwayat');
                        if (value){
                            return modelDM.renderCabut(value, record.get('disposisi_iscabut'));
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Lokasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    dataIndex: 'lokasi_nama',
                    emptyCellText: '-',
                    text: 'Lokasi'
                }
            ]
        });

        me.processSipasriwayatsessionList(me);
        me.callParent(arguments);
    },

    processAktifAsisten: function(config) {
        if(!this.isAsistensi)
        {
            return null;
        }
        return config;
    },

    processSipasriwayatsessionList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    }

});