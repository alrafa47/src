/*
 * File: app/view/Sipas/staf/wakil/monitoring/masuk/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.staf.wakil.monitoring.masuk.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_staf_wakil_monitoring_masuk_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.Disposisi',
        'SIPAS.view.Sipas.com.button.revision.List',
        'SIPAS.view.Sipas.com.button.Expedition',
        'SIPAS.view.Sipas.com.button.Correspondent',
        'SIPAS.view.Sipas.com.button.Print',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.form.field.ComboBox',
        'Ext.grid.RowNumberer',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    isAsistensi: true,
    languageCode: 'suratmasuk_list',
    languageMode: 'title',
    languageable: true,
    dbclickToView: true,
    autoScroll: true,
    title: 'Surat Masuk',
    titleAlign: 'left',
    allowDeselect: true,
    columnLines: false,
    emptyText: 'Tidak ada data',
    store: 'Sipas.masuk.session.kotak.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                getRowClass: function(record, rowIndex, rowParams, store)
                {
                    if(record.get("disposisi_masuk_ispengingat") === true){
                        return "x-grid-row-bold";      
                    }else if(record.get("disposisi_masuk_isbaca") === 0){
                        if(record.get("disposisi_masuk_iscabut") === 1){
                            return "x-grid-row-bold-danger";
                        } else {
                            return "x-grid-row-bold";
                        }
                    } else if(record.get("disposisi_masuk_isbaca") === 1){
                        if(record.get("disposisi_masuk_iscabut") === 1){
                            return "x-grid-row-danger";
                        }
                    }
                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarProperties',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh',
                            action: 'reload'
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            action: 'view',
                            disabled: true,
                            hidden: true,
                            text: 'Lihat Surat'
                        },
                        {
                            xtype: 'sipas_com_button_disposisi',
                            action: 'disposisi',
                            disabled: true,
                            hidden: true,
                            text: 'Disposisikan'
                        },
                        {
                            xtype: 'sipas_com_button_revision_list',
                            action: 'riwayat',
                            roleName: 'surat_masuk_penerima_riwayat',
                            roleable: true,
                            disabled: true,
                            hidden: true,
                            text: 'Riwayat Disposisi'
                        },
                        {
                            xtype: 'sipas_com_button_expedition',
                            action: 'ekspedisi',
                            roleable: true,
                            roleName: 'surat_masuk_penerima_ekspedisi',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_correspondent',
                            action: 'korespondensi',
                            roleable: true,
                            roleName: 'surat_masuk_penerima_korespondensi',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_print',
                            action: 'resi',
                            roleable: true,
                            roleName: 'surat_masuk_resi',
                            disabled: true,
                            hidden: true,
                            text: 'Cetak Resi'
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        me.processStatusMasuk({
                            xtype: 'combobox',
                            cls: 'x-field-toolbar',
                            itemId: 'statusMasuk',
                            width: 200,
                            editable: false,
                            hideTrigger: true,
                            displayField: 'nama',
                            store: {
                                fields: [
                                    'value',
                                    'nama'
                                ],
                                data: [
                                    
                                ]
                            },
                            valueField: 'value'
                        })
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.masuk.session.kotak.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y'),
                            jam = "<div class='supporttext supporttext-dark'>"+ Ext.util.Format.date(value, 'H:i') +"</div>";
                        if(record.get('disposisi_masuk_isbaca') === 1){
                            return '<div class="cell-text"><div class="subtext">'+val+'</div>'+jam+'</div>';
                        }else{
                            return '<div class="cell-text"><div class="subtext"><span class="bold">' + val + '</span></div>'+ jam+'</div>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    filterable: true,
                    width: 100,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_terima_tgl',
                    text: 'Tgl.Terima',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var surat_model = record.get('surat_model'),
                            is_baca = record.get('disposisi_masuk_isbaca'),
                            mode = record.get('disposisi_mode'),
                            jenis = '',
                            tipe = '',
                            baca = '';

                        if(is_baca === 1){
                            baca = '';
                        }else if(is_baca === 0){
                            baca = ' bold';
                        }
                        if (mode === 'Disposisi'){
                            jenis = record.get('jenis_nama');
                            tipe = 'Disposisi';
                        } else if (record.get('disposisi_mode') === 'Nota Dinas'){
                            jenis = record.get('jenis_nama');
                            tipe = 'Nota Dinas';
                        } else {
                            if (surat_model === 1){
                                jenis = record.get('jenis_nama');
                                tipe = 'Masuk Eksternal';
                            } else if (surat_model === 3){
                                jenis = record.get('jenis_nama');
                                tipe = 'Masuk Internal';
                            } else if (surat_model === 2){
                                jenis = record.get('jenis_nama');
                                tipe = 'Keluar Eksternal';
                            }
                        }

                        if (record.get('jenis_nama') === null || record.get('jenis_nama') === ''){
                            jenis = '-';
                        }

                        return new Ext.XTemplate(['<div class="cell-text"><div class="subtext{is_baca}">{sub}</div><div class="supporttext supporttext-dark{is_baca}">{support}</div></div>']).apply({
                        sub: jenis,
                        support: tipe,
                        is_baca: baca
                    });
                    },
                    width: 140,
                    sortable: false,
                    dataIndex: 'surat_tipe',
                    text: 'Tipe Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                            mode = record.get('disposisi_mode');

                        switch (mode) {
                            case 'Disposisi':
                            return modelSurat.renderSuratSessionList(value, 'disposisi', record);
                            break;
                            case 'Nota Dinas':
                            return modelSurat.renderSuratSessionList(value, 'nota_dinas', record);
                            break;
                            case 'Masuk':
                            return modelSurat.renderSuratSessionList(value, 'masuk', record);
                            break;
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                }
                        }
                    },
                    width: 420,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    text: 'Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelDP = Ext.ModelManager.getModel('SIPAS.model.Sipas.disposisi.Masuk'),
                            date_baca = Ext.util.Format.date(record.get('disposisi_masuk_baca_tgl'), 'd M Y H:i'),
                            date_terus = Ext.util.Format.date(record.get('disposisi_masuk_terus_tgl'), 'd M Y H:i'),
                            cabut_tgl = Ext.util.Format.date(record.get('disposisi_masuk_cabut_tgl'), 'd M Y H:i'),
                            time = '',
                            mode = record.get('disposisi_mode');

                        if (record.get('disposisi_masuk_iscabut') === 1){
                            time = '<div class="supporttext supporttext-dark">Pada '+cabut_tgl+'</div>';
                        }else if (record.get('disposisi_masuk_isbaca') === 1){
                            if (record.get('disposisi_masuk_isterus') === 0){
                                time = '<div class="supporttext supporttext-dark">Pada '+date_baca+'</div>';
                            } else {
                                time = '<div class="supporttext supporttext-dark">Pada '+date_terus+'</div>';
                            }
                        }

                        if (mode === "Disposisi" || mode === "Nota Dinas"){
                            return modelDP.renderStatusBaca(value, record.get('disposisi_masuk_isterus'), true, record)+time;
                        } else {
                            return modelDP.renderStatusBaca(value, record.get('disposisi_masuk_isterus'), false, record)+time;
                        }
                    },
                    width: 140,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_isbaca',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == 1){
                            return '<span class="badge badge-solid info"><i class="icon ion-logo-closed-captioning info margin-right-4"></i></span>Tembusan';
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    width: 160,
                    sortable: true,
                    dataIndex: 'disposisi_masuk_istembusan',
                    text: 'Tembusan'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var terima_berkas = record.get('disposisi_masuk_isberkasterima'),
                            berkas_status = record.get('disposisi_masuk_berkas_status'),
                            berkas_status_tgl = Ext.util.Format.date(record.get('disposisi_masuk_berkas_status_tgl'), 'd M Y H:i');

                        switch (berkas_status) {
                            case record.self.statusBerkas().BERKAS_REQUEST:
                            return new Ext.XTemplate(['<div class="cell-text">',
                            '<div class="subtext warning">',
                            '<span class="badge badge-solid margin-right-4">',
                            '<i class="icon ion-md-copy warning"></i>',
                            '</span> {text}',
                            '</div>',
                            '</div>']).apply({
                                text: 'Dalam proses permintaan'
                            });
                            break;
                            case record.self.statusBerkas().BERKAS_APPROVE:
                            if (value == 1){
                                if (terima_berkas == 1){
                                    return new Ext.XTemplate(['<div class="cell-text">',
                                    '<div class="subtext info">',
                                    '<span class="badge badge-solid margin-right-4">',
                                    '<i class="icon ion-md-copy info"></i>',
                                    '</span> {text}',
                                    '</div>',
                                    '<div class="supporttext supporttext-dark">Pada {tgl}</div>',
                                    '</div>']).apply({
                                        text: 'Berkas diterima',
                                        tgl: Ext.util.Format.date(record.get('disposisi_masuk_berkasterima_tgl'), 'd M Y H:i')
                                    });
                                } else {
                                    return '<div class="cell-text">'+
                                    '<div class="subtext">'+
                                    '<span class="badge badge-solid margin-right-4">'+
                                    '<i class="icon ion-md-copy grey-700"></i>'+
                                    '</span> Berkas belum diterima'+
                                    '</div>'+
                                    '</div>';
                                }
                            }
                            break;
                            case record.self.statusBerkas().BERKAS_CANCEL:
                            return new Ext.XTemplate(['<div class="cell-text">',
                            '<div class="subtext danger">',
                            '<span class="badge badge-solid margin-right-4">',
                            '<i class="icon ion-md-copy danger"></i>',
                            '</span> {text}',
                            '</div>',
                            '</div>']).apply({
                                text: 'Permintaan dibatalkan'
                            });
                            break;
                            case record.self.statusBerkas().BERKAS_DECLINE:
                            return new Ext.XTemplate(['<div class="cell-text">',
                            '<div class="subtext danger">',
                            '<span class="badge badge-solid margin-right-4">',
                            '<i class="icon ion-md-copy danger"></i>',
                            '</span> {text}',
                            '</div>',
                            '</div>']).apply({
                                text: 'Permintaan ditolak'
                            });
                            break;
                            default:
                            if (value == 1){
                                if (terima_berkas == 1){
                                    return new Ext.XTemplate(['<div class="cell-text">',
                                    '<div class="subtext info">',
                                    '<span class="badge badge-solid margin-right-4">',
                                    '<i class="icon ion-md-copy info"></i>',
                                    '</span> {text}',
                                    '</div>',
                                    '<div class="supporttext supporttext-dark">Pada {tgl}</div>',
                                    '</div>']).apply({
                                        text: 'Berkas diterima',
                                        tgl: Ext.util.Format.date(record.get('disposisi_masuk_berkasterima_tgl'), 'd M Y H:i')
                                    });
                                } else {
                                    return '<div class="cell-text">'+
                                    '<div class="subtext">'+
                                    '<span class="badge badge-solid margin-right-4">'+
                                    '<i class="icon ion-md-copy grey-700"></i>'+
                                    '</span> Belum meminta berkas fisik'+
                                    '</div>'+
                                    '</div>';
                                }
                            } else {
                                return '<span class="alternative">-</span>';
                            }
                            break;
                        }
                    },
                    width: 160,
                    sortable: true,
                    dataIndex: 'surat_useberkas',
                    text: 'Terima Berkas'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'No.Registrasi');
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Registrasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_registrasi',
                    text: 'No.Registrasi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = (value) ? value : record.get('unit_nama');

                        if (val){
                            return val;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Pengirim Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    width: 200,
                    sortable: false,
                    dataIndex: 'surat_pengirim',
                    text: 'Pengirim Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y'),
                            jam = '<div class="supporttext supporttext-dark">'+Ext.util.Format.date(value, 'H:i')+'</div>';

                        if(record.get('disposisi_masuk_isbaca') === 1){
                            return '<div class="cell-text"><div class="subtext">'+val+'</div>'+jam+'</div>';
                        }else{
                            return '<div class="cell-text"><div class="subtext"><span class="bold">'+val+'</span></div>'+jam+'</div>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_properti_buat_tgl',
                    text: 'Tgl.Registrasi',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var val = value,
                        //     badge = '<span class="badge badge-light margin-right-4" style="background-color:'+record.get('sifat_color')+';">'+record.get('sifat_kode')+'</span>',
                        //     subtext = "<div class='supporttext supporttext-dark'>"+record.get('surat_registrasi')+"</div>",
                        //     isBaca = record.get('disposisi_masuk_isbaca'),
                        //     modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                        //     valRender = modelSurat.renderBaca(isBaca, val, 'Perihal');

                        // if(record.get('sifat_color')){
                        //     return badge + valRender + subtext;
                        // }else{
                        //     return valRender + subtext;
                        // }
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Perihal Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_perihal',
                    emptyCellText: '-',
                    text: 'Perihal'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var val = (value)? value : record.get('unit_source_nama'),
                        //     subtext = "<div class='supporttext supporttext-dark'>"+record.get('surat_nomor')+"</div>",
                        //     isBaca = record.get('disposisi_masuk_isbaca'),
                        //     modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                        //     valRender = modelSurat.renderBaca(isBaca, val, 'Pengirim');
                        // if(record.get('surat_nomor')){
                        //     return '<div class="subtext">'+valRender+'</div>'+subtext;
                        // }else{
                        //     return valRender;
                        // }

                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Dari',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_pengirim',
                    text: 'Dari'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'Tujuan');

                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Surat Kepada',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 300,
                    sortable: true,
                    dataIndex: 'surat_tujuan',
                    text: 'Kepada'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'Perihal');
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Agenda',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'surat_agenda',
                    text: 'No.Agenda'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'No.Surat');
                        if (value){
                            return '<span class="blue-700-i">'+value+'</span>';
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari No Surat',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'surat_nomor',
                    emptyCellText: '-',
                    text: 'No.Surat'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var val = Ext.util.Format.date(value, 'd M Y');
                        if (val){
                            return val;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 100,
                    sortable: true,
                    dataIndex: 'surat_tanggal',
                    text: 'Tgl.Surat',
                    tooltip: '(Tanggal-Bulan-Tahun)'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // if(true)
                        // {
                        //     metaData.tdCls="oke";
                        // }

                        var modelSurat 	= Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat'),
                            mode = record.get('disposisi_mode'),
                            disposisi_useprioritas = record.get('disposisi_useprioritas'),
                            surat_prioritas = record.get('surat_prioritas');

                        if (mode == 'Disposisi' || mode == 'Nota Dinas'){
                            return modelSurat.renderPrioritasSession(disposisi_useprioritas, record.get('disposisi_prioritas_tgl'), record, 'disposisi');
                        } else {
                            if (surat_prioritas !== null){
                                return modelSurat.renderPrioritasSession(surat_prioritas, record.get('surat_prioritas_tgl'), record, 'surat');
                            }
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    languageable: true,
                    languageMode: 'text',
                    languageCode: 'prioritas_suratmasuk_list',
                    filter: {
                        type: 'date'
                    },
                    hidden: true,
                    width: 140,
                    sortable: true,
                    dataIndex: 'surat_prioritas_tgl',
                    text: 'Urgensi'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'Jenis');
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative ellipsis">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Jenis',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'jenis_nama',
                    text: 'Jenis'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'Media');
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Media',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'media_nama',
                    text: 'Media'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        // var modelSurat = Ext.ModelManager.getModel('SIPAS.model.Sipas.Surat');
                        // return modelSurat.renderBaca(record.get('disposisi_masuk_isbaca'), value, 'Lokasi');
                        if (value){
                            return value;
                        } else {
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        emptyText: 'Cari Lokasi',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                                    this.up('gridpanel').filterHeader(this);
                                },
                            afterrender: function(){
                                    this.show();
                                }
                        }
                    },
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'lokasi_nama',
                    text: 'Lokasi'
                }
            ]
        });

        me.processSipasmasuksessionkotakList(me);
        me.callParent(arguments);
    },

    processStatusMasuk: function(config) {
        if(!this.isAsistensi)
        {
            return null;
        }
        return config;
    },

    processSipasmasuksessionkotakList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    }

});