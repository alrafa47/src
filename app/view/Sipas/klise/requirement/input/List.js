/*
 * File: app/view/Sipas/klise/requirement/input/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.klise.requirement.input.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_klise_requirement_input_list',

    requires: [
        'Ext.grid.column.Column',
        'Ext.form.field.Text',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing'
    ],

    title: 'Data Keterangan',
    store: 'Sipas.klise.requirement.input.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(record.get('required')){
                            value = value + "<span class='danger bold'>*</span>";
                        }
                        return value;
                    },
                    width: 140,
                    sortable: false,
                    dataIndex: 'name',
                    menuDisabled: true,
                    text: 'Data Keterangan',
                    flex: 2
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'value',
                    text: 'Isi <span class="alternative">(silahkan klik untuk mengisi)</span>',
                    flex: 3,
                    editor: {
                        xtype: 'textfield'
                    }
                }
            ],
            plugins: [
                Ext.create('Ext.grid.plugin.CellEditing', {
                    pluginId: 'celleditor',
                    clicksToEdit: 1
                })
            ]
        });

        me.callParent(arguments);
    }

});