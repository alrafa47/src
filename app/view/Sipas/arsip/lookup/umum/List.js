/*
 * File: app/view/Sipas/arsip/lookup/umum/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.arsip.lookup.umum.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_arsip_lookup_umum_list',

    requires: [
        'SIPAS.view.Sipas.com.button.Putin',
        'Ext.grid.RowNumberer',
        'Ext.grid.View',
        'Ext.grid.column.Date',
        'Ext.grid.feature.Grouping',
        'Ext.XTemplate',
        'Ext.selection.CheckboxModel',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    itemId: 'listUmum',
    title: 'Umum',
    emptyText: 'Tidak ada Data',
    store: 'Sipas.bebas.list.umum.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var tgl_buat = Ext.util.Format.date(record.get('properti_buat_tgl'), 'd M Y H:i'),
                            perihal = value,
                            pembuat = record.get('properti_pembuat_nama'),
                            jumlah_doc = record && record.get('arsip_jumlah_dokumen'),
                            doc = '';

                        if (value){
                            perihal = '<div class="subtext">'+value+'</div>';
                        } else {
                            perihal = '<div class="subtext alternative">Tidak ada perihal arsip</div>';
                        }

                        if (jumlah_doc > 0){
                            doc = '<div class="badge badge-right badge-bottom">'+jumlah_doc+'</div>';
                        }

                        return new Ext.XTemplate([
                        '<div class="cell-row"><div class="cell-visual cell-visual-left">'+
                        '<div class="img img-circle img-32">'+
                        '<i class="bigger-1-25 icon ion-md-folder orange-600"></i>{docs}'+
                        '</div>'+
                        '</div>'+
                        '<div class="cell-text">'+
                        '{perihal}'+
                        '<div class="supporttext supporttext-dark">Dibuat pada {tgl} oleh {pembuat}</div>'+
                        '</div></div>'
                        ]).apply({
                            perihal: perihal,
                            tgl: tgl_buat,
                            pembuat: pembuat,
                            docs: doc
                        });
                    },
                    filterable: true,
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                        this.up('gridpanel').filterHeader(this);
                        }
                        }
                    },
                    width: 300,
                    sortable: false,
                    dataIndex: 'arsip_nama',
                    text: 'Perihal Arsip',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return '<i class="icon ion-md-attach grey-700"></i> '+value;
                    },
                    hidden: true,
                    width: 60,
                    dataIndex: 'arsip_jumlah_dokumen',
                    text: '<i class="icon ion-md-attach grey-700"></i>'
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                        this.up('gridpanel').filterHeader(this);
                        }
                        }
                    },
                    filterable: true,
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'unit_nama',
                    text: 'Unit Kerja'
                },
                {
                    xtype: 'gridcolumn',
                    items: {
                        xtype: 'textfield',
                        flex: 1,
                        margin: 2,
                        listeners: {
                            change: function(textfield, e, eOpts){
                        this.up('gridpanel').filterHeader(this);
                        }
                        }
                    },
                    filterable: true,
                    hidden: true,
                    width: 200,
                    sortable: true,
                    dataIndex: 'properti_pembuat_nama',
                    text: 'Dicatat Oleh'
                },
                {
                    xtype: 'datecolumn',
                    filter: {
                        type: 'date'
                    },
                    filterable: true,
                    hidden: true,
                    width: 120,
                    sortable: true,
                    dataIndex: 'properti_buat_tgl',
                    text: 'Dicatat Pada',
                    flex: 1,
                    format: 'd M Y H:i'
                }
            ],
            features: [
                {
                    ftype: 'grouping',
                    enableGroupingMenu: false,
                    enableNoGroups: false,
                    groupHeaderTpl: [
                        '{name}'
                    ],
                    hideGroupedHeader: true
                }
            ],
            selModel: Ext.create('Ext.selection.CheckboxModel', {
                mode: 'SINGLE'
            }),
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    itemId: 'toolbarControl',
                    ui: 'footer',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'sipas_com_button_putin',
                            disabled: true
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.bebas.list.umum.List'
                }
            ]
        });

        me.processSipasbebasList(me);
        me.callParent(arguments);
    },

    processSipasbebasList: function(config) {
        var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };

        if (! config.features) {
            config.features=filters;
        } else {
            config.features.push(filters);
        }

        return config;
    }

});