/*
 * File: app/view/Sipas/disposisi/riwayat/cabut/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.disposisi.riwayat.cabut.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_disposisi_riwayat_cabut_list',

    requires: [
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.form.Label',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.RowEditing'
    ],

    itemId: 'Sipas.disposisi.forward.penerima.List1',
    bodyBorder: false,
    frameHeader: false,
    header: false,
    title: 'Daftar Penerima',
    allowDeselect: true,
    disableSelection: true,
    store: 'Sipas.disposisi.riwayat.cabut.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    itemId: 'disposisi_penerima',
                    width: 100,
                    fieldLabel: 'Label',
                    name: 'disposisi_penerima_penerima'
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarControl',
                    items: [
                        {
                            xtype: 'label',
                            cls: 'alternative bold',
                            hidden: true,
                            padding: 5,
                            text: 'Penerima',
                            listeners: {
                                afterrender: {
                                    fn: me.onLabelAfterRender,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var is_tembusan = record.get('disposisi_masuk_istembusan'),
                            is_berkas = record.get('disposisi_masuk_isberkas'),
                            berkas_isterima = record.get('disposisi_masuk_isberkasterima'),
                            berkas_terima_tgl = record.get('disposisi_masuk_berkasterima_tgl'),
                            jabatan = record.get('disposisi_masuk_penerima_jabatan_nama') ? record.get('disposisi_masuk_penerima_jabatan_nama') : '(Tidak ada jabatan)',
                            unit = record.get('disposisi_masuk_penerima_unit_nama') ? record.get('disposisi_masuk_penerima_unit_nama') : '(Tidak ada unit)';

                        if (is_tembusan === 1){
                            is_tembusan = '<span class="badge badge-solid margin-right-4"><i class="icon ion-logo-closed-captioning"></i></span>Tembusan<span class="margin-right-8"></span>';
                        } else {
                            is_tembusan = '';
                        }

                        if (is_berkas === 1){
                            if (berkas_isterima === 1){
                                is_berkas = '<span class="badge badge-solid margin-right-4"><i class="icon ion-md-copy green-700-i"></i></span>Berkas diterima pada '+Ext.util.Format.date(berkas_terima_tgl, 'd M Y H:i');
                            } else {
                                is_berkas = '<span class="badge badge-solid margin-right-4"><i class="icon ion-md-copy"></i></span>Berkas belum diterima';
                            }
                        } else {
                            is_berkas = '';
                        }

                        var id = record.getId(),
                            tpl = this.dataTpl || (
                            this.tpl =
                            "<div class='cell-col'><div class='cell-row'><div class='cell-visual cell-visual-left'>"+
                            "<img src='server.php/sipas/staf/get_image/foto?id={disposisi_masuk_penerima_id}' class='img img-circle img-32'>"+
                            "</div>"+
                            "<div class='cell-text'>"+
                            "<div class='subtext ellipsis'>"+record.get('disposisi_masuk_penerima_nama')+"</div>"+
                            //         "<div class='subtext'>"+jabatan+"</div>"+
                            "<div class='supporttext supporttext-dark ellipsis'>"+jabatan+" - "+unit+"</div>"+
                            "<div class='supporttext supporttext-dark'>"+is_tembusan+is_berkas+"</div>"+
                            "</div></div>"
                            );
                        return (new Ext.Template(tpl)).apply(record.getData());
                    },
                    minWidth: 200,
                    sortable: false,
                    dataIndex: 'disposisi_masuk_penerima_nama',
                    text: 'Penerima',
                    flex: 1
                }
            ],
            plugins: [
                Ext.create('Ext.grid.plugin.RowEditing', {
                    pluginId: 'roweditor'
                })
            ]
        });

        me.callParent(arguments);
    },

    onLabelAfterRender: function(component, eOpts) {
        component.setText(component.up('panel').title);
    }

});