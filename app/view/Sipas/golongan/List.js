/*
 * File: app/view/Sipas/golongan/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.view.Sipas.golongan.List', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sipas_golongan_list',

    requires: [
        'SIPAS.view.Sipas.com.atribut.cascade.Toolbar',
        'SIPAS.view.Sipas.com.button.Refresh',
        'SIPAS.view.Sipas.com.button.Add',
        'SIPAS.view.Sipas.com.button.View',
        'SIPAS.view.Sipas.com.button.ToggleFilter',
        'Ext.button.Button',
        'Ext.toolbar.Fill',
        'Ext.form.field.ComboBox',
        'Ext.grid.RowNumberer',
        'Ext.grid.column.Number',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging'
    ],

    clickToView: true,
    languageCode: 'golongan_list',
    languageMode: 'title',
    languageable: true,
    title: 'Daftar Golongan',
    allowDeselect: true,
    columnLines: false,
    disableSelection: true,
    emptyText: 'Tidak ada Data',
    store: 'Sipas.golongan.aktif.List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'sipas_com_atribut_cascade_toolbar',
                    dock: 'top'
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toolbarProperties',
                    layout: {
                        type: 'hbox',
                        defaultMargins: {
                            top: 4,
                            right: 4,
                            bottom: 6,
                            left: 4
                        }
                    },
                    items: [
                        {
                            xtype: 'sipas_com_button_refresh'
                        },
                        {
                            xtype: 'sipas_com_button_add',
                            roleable: true,
                            roleName: 'golongan_insert'
                        },
                        {
                            xtype: 'sipas_com_button_view',
                            roleable: true,
                            roleName: 'golongan',
                            disabled: true,
                            hidden: true
                        },
                        {
                            xtype: 'sipas_com_button_togglefilter',
                            toggleHandler: function(button, state) {
                                button.up('grid').query('gridcolumn textfield').forEach(function(field){
                                    state ? field.show():field.hide();
                                });
                            }
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'Aktif',
                            labelAlign: 'right',
                            value: 'Aktif',
                            editable: false,
                            hideTrigger: true,
                            displayField: 'nama',
                            store: {
                                fields: [
                                    'value',
                                    'nama'
                                ],
                                data: [
                                    {
                                        value: 0,
                                        nama: 'Semua'
                                    },
                                    {
                                        value: 1,
                                        nama: 'Aktif'
                                    },
                                    {
                                        value: 2,
                                        nama: 'Tidak Aktif'
                                    }
                                ]
                            },
                            valueField: 'value'
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Sipas.golongan.aktif.List'
                }
            ],
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('golongan_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    languageable: true,
                    languageMode: 'text',
                    languageCode: 'level_golongan_list',
                    width: 60,
                    sortable: true,
                    dataIndex: 'golongan_level',
                    text: 'Gol'
                },
                {
                    xtype: 'numbercolumn',
                    editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('golongan_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    languageable: true,
                    languageMode: 'text',
                    languageCode: 'sgt_golongan_list',
                    width: 200,
                    sortable: true,
                    align: 'right',
                    dataIndex: 'golongan_sgt',
                    text: 'SGT',
                    format: '0,000'
                },
                {
                    xtype: 'numbercolumn',
                    editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var aktif = record.get('golongan_isaktif');

                        if(value){
                            return this.genAktif(value, aktif);
                        }else{
                            return '<span class="alternative">-</span>';
                        }
                    },
                    filterable: true,
                    languageable: true,
                    languageMode: 'text',
                    languageCode: 'gaji_pokok_golongan_list',
                    width: 200,
                    sortable: true,
                    align: 'right',
                    dataIndex: 'golongan_gaji_pokok',
                    text: 'Gaji Pokok',
                    format: '0,000'
                }
            ],
            selModel: Ext.create('Ext.selection.RowModel', {
                allowDeselect: true
            })
        });

        me.callParent(arguments);
    },

    genAktif: function(value, aktif) {
        if(!aktif){
            return '<span class="alternative">'+value+'</span>';
        }else{
            return value;
        }
    }

});