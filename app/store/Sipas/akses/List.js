/*
 * File: app/store/Sipas/akses/List.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SIPAS.store.Sipas.akses.List', {
    extend: 'Ext.data.TreeStore',

    requires: [
        'SIPAS.model.Sipas.Akses',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'Ext.util.Sorter'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'SIPAS.model.Sipas.Akses',
            remoteFilter: true,
            remoteSort: true,
            storeId: 'Sipas.akses.List',
            proxy: {
                type: 'ajax',
                url: 'rule.json',
                reader: {
                    type: 'json'
                }
            },
            sorters: [
                {
                    property: 'fitur_level'
                },
                {
                    property: 'fitur_nama'
                }
            ],
            listeners: {
                beforeload: {
                    fn: me.onTreeStoreBeforeLoad1,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onTreeStoreBeforeLoad1: function(store, operation, eOpts) {
        if(store.isLoading()) return false;
    }

});